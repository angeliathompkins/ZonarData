{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory Name",
            "defaultValue": "piketeamadf"
        },
        "piketeamasdw_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'piketeamasdw'"
        },
        "linkedService1_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'linkedService1'"
        },
        "ZonarJsonFiles_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'ZonarJsonFiles'"
        },
        "FTPTest_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": ""
        },
        "AzureBlob1_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "assettestj.json"
        },
        "AzureBlob1_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "asset/2016/04/01"
        },
        "ZonarPTOJsonBlob_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "ZonarPTOJsonBlob_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "AzurePTODataLakeStoreFile_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "AzurePTODataLakeStoreFile_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "ZonarPathJsonBlob_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "ZonarPathJsonBlob_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "ZonarPathADLFile_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "ZonarPathADLFile_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "ZonarPathJsonBlob2bakup_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "ZonarPathJsonBlob2bakup_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "ZonarPathADLBackup3JsonBlob3_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "zonarpath_20180515140936"
        },
        "ZonarPathADLBackup3JsonBlob3_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "zonarpath"
        },
        "ZonarPathJsonBlob2V38backup_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "ZonarPathJsonBlob2V38backup_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "TestAzureDataLakeStoreFile1_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "junk"
        },
        "TestAzureDataLakeStoreFile1_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "zonarpath"
        },
        "TestAzureBlob2_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "zonarpath_20180515145908"
        },
        "TestAzureBlob2_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "zonarpath/2018-05-15"
        },
        "ZonarCurrentLocationJsonBlob_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "ZonarCurrentLocationJsonBlob_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "ZonarCurrentLocationADLFile_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "ZonarCurrentLocationADLFile_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "TestAzureBlob3_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "zonarpath_20180515145908"
        },
        "TestAzureBlob3_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "zonarpath/2018-05-15"
        },
        "ZonarMileageJsonBLob_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "mileage_20180515181419"
        },
        "ZonarMileageJsonBLob_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "zonarmileage/2018-05-15"
        },
        "ZonarPathCSVblob_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "ZonarPathCSVblob_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "AzureDataLakeStoreFile1_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "Mariner Data SetPD.csv"
        },
        "AzureDataLakeStoreFile1_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "ZonarPathcsv"
        },
        "ZonarPathCSVBlobV38_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "ZonarPathCSVBlobV38_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "ZonarPathADLFileV38_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().FileLocation"
        },
        "ZonarPathADLFileV38_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Container"
        },
        "BackFillFrom5-5V3Temp_properties_pipeline_parameters_NotificationList": {
            "type": "string",
            "defaultValue": "wayne.snyder@mariner-"
        },
        "BackFillFrom5-5V3Temp_properties_pipeline_parameters_ETLWindowStart": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowStartTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "BackFillFrom5-5V3Temp_properties_pipeline_parameters_ETLWindowEnd": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowEndTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "Every15Minutes15V3_properties_pipeline_parameters_NotificationList": {
            "type": "string",
            "defaultValue": "wayne.snyder@mariner-usa.com"
        },
        "Every15Minutes15V3_properties_pipeline_parameters_ETLWindowStart": {
            "type": "string",
            "defaultValue": "@{formatDateTime(addminutes(trigger().outputs.windowEndTime,-15),'yyyy-MM-dd HH:mm:ss')}"
        },
        "Every15Minutes15V3_properties_pipeline_parameters_ETLWindowEnd": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowEndTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "Every15Minutes00V3_properties_pipeline_parameters_NotificationList": {
            "type": "string",
            "defaultValue": "wayne.snyder@mariner-usa.com"
        },
        "Every15Minutes00V3_properties_pipeline_parameters_ETLWindowStart": {
            "type": "string",
            "defaultValue": "@{formatDateTime(addminutes(trigger().outputs.windowEndTime,-15),'yyyy-MM-dd HH:mm:ss')}"
        },
        "Every15Minutes00V3_properties_pipeline_parameters_ETLWindowEnd": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowEndTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "Daily1300UTC_properties_pipeline_parameters_NotificationList": {
            "type": "string",
            "defaultValue": "wayne.snyder@mariner-usa.com"
        },
        "Daily1300UTC_properties_pipeline_parameters_ETLWindowStart": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowStartTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "Daily1300UTC_properties_pipeline_parameters_ETLWindowEnd": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowEndTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "Every10Minutes10V2_properties_pipeline_parameters_NotificationList": {
            "type": "string",
            "defaultValue": "wayne.snyder@mariner-usa.com"
        },
        "Every10Minutes10V2_properties_pipeline_parameters_ETLWindowStart": {
            "type": "string",
            "defaultValue": "@{formatDateTime(addminutes(trigger().outputs.windowEndTime,-10),'yyyy-MM-dd HH:mm:ss')}"
        },
        "Every10Minutes10V2_properties_pipeline_parameters_ETLWindowEnd": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowEndTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "Every10Mintes20V2_properties_pipeline_parameters_NotificationList": {
            "type": "string",
            "defaultValue": "wayne.snyder@mariner-usa.com"
        },
        "Every10Mintes20V2_properties_pipeline_parameters_ETLWindowStart": {
            "type": "string",
            "defaultValue": "@{formatDateTime(addminutes(trigger().outputs.windowEndTime,-10),'yyyy-MM-dd HH:mm:ss')}"
        },
        "Every10Mintes20V2_properties_pipeline_parameters_ETLWindowEnd": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowEndTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "Every10Minutes00V2_properties_pipeline_parameters_NotificationList": {
            "type": "string",
            "defaultValue": "wayne.snyder@mariner-usa.com"
        },
        "Every10Minutes00V2_properties_pipeline_parameters_ETLWindowStart": {
            "type": "string",
            "defaultValue": "@{formatDateTime(addminutes(trigger().outputs.windowEndTime,-10),'yyyy-MM-dd HH:mm:ss')}"
        },
        "Every10Minutes00V2_properties_pipeline_parameters_ETLWindowEnd": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowEndTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "Daily 1300UTCTemp_properties_pipeline_parameters_NotificationList": {
            "type": "string",
            "defaultValue": "wayne.snyder@mariner-usa.com"
        },
        "Daily 1300UTCTemp_properties_pipeline_parameters_ETLWindowStart": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowStartTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "Daily 1300UTCTemp_properties_pipeline_parameters_ETLWindowEnd": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowEndTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "tempUTC1300_properties_pipeline_parameters_NotificationList": {
            "type": "string",
            "defaultValue": "wayne.snyder@mariner-usa.com"
        },
        "tempUTC1300_properties_pipeline_parameters_ETLWindowStart": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowStartTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "tempUTC1300_properties_pipeline_parameters_ETLWindowEnd": {
            "type": "string",
            "defaultValue": "@{formatDateTime(trigger().outputs.windowEndTime,'yyyy-MM-dd HH:mm:ss')}"
        },
        "linkedService1_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "Mariner-usa_EXT"
        },
        "PikeTeamADLS_properties_typeProperties_dataLakeStoreUri": {
            "type": "string",
            "defaultValue": "https://piketeamadls.azuredatalakestore.net/webhdfs/v1"
        },
        "PikeTeamADLS_properties_typeProperties_tenant": {
            "type": "string",
            "defaultValue": "9fbce44f-d64c-4f7e-bbe0-19479c36278b"
        },
        "PikeTeamADLS_properties_typeProperties_subscriptionId": {
            "type": "string",
            "defaultValue": "3769e455-2e41-407b-b8dd-cd711324b864"
        },
        "PikeTeamADLS_properties_typeProperties_resourceGroupName": {
            "type": "string",
            "defaultValue": "PikeTEAM"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/ActivityPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "ActivityBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityInsert]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineId": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLSliceEnd": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLTask": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLTask",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLSliceStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ExecuteActivity",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": {
                                "value": "@pipeline().parameters.StoredProcedureName",
                                "type": "Expression"
                            },
                            "storedProcedureParameters": {
                                "ErrorBln": {
                                    "value": "0",
                                    "type": "Byte"
                                },
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "FromRowNumber": {
                                    "value": "-1",
                                    "type": "Int64"
                                },
                                "ToRowNumber": {
                                    "value": "-1",
                                    "type": "Int64"
                                },
                                "SourceTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ProcedureName": {
                                    "value": {
                                        "value": "@pipeline().parameters.StoredProcedureName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "RowCount",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLStatus": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "RowsErrored": {
                                    "value": "0",
                                    "type": "Int64"
                                },
                                "RowsInserted": {
                                    "value": {
                                        "value": "@activity('RowCount').output.firstrow.RowsInserted",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "RowsUpdated": {
                                    "value": {
                                        "value": "@activity('RowCount').output.firstrow.RowsUpdated",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityBegin Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ExecuteActivity Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ExecuteActivity",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ExecuteActivity').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ActivityEnd Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "RowCount",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ExecuteActivity",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "Select count(case when etlinsertdate=etlmodifydate then etlpipelineid else null end) RowsInserted,\ncount(case when etlinsertdate<>etlmodifydate then etlpipelineid else null end) RowsUpdated\nfrom @{pipeline().parameters.DestinationTable}\nwhere etlpipelineid='@{pipeline().parameters.ETLPipelineID}'",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDWETLPipelineInstance",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLPipelineID": {
                        "type": "String"
                    },
                    "ETLActivityName": {
                        "type": "String"
                    },
                    "ETLPipelineName": {
                        "type": "String"
                    },
                    "ETLTask": {
                        "type": "String"
                    },
                    "SourceTable": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "DestinationTable": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    },
                    "StoredProcedureName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Templates"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDWETLPipelineInstance')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PolybasePipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Load",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TestActivity",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "SourceTable": "ET.CurrencyRate",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Stage.CurrencyRate",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Stage.pCurrencyRate"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Transform",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Transform",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Load",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "DWCurrencyRate",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Transform",
                                "SourceTable": "Stage.CurrencyRate",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.FactCurrencyRate",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pCurrencyRate"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Templates"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MasterPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "ExecMasterPipelineDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecMasterPipelineWork",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "MasterPipelineDim",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ExecMasterPipelineDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline @{pipeline().Pipeline}  Success at @{utcnow()}\", \"Subject\": \"Pipeline Success - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ExecMasterPipelineExtract",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "MasterPipelineExtract",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecMasterPipelineWork",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecMasterPipelineExtract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "MasterPipelineWork",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "angelia.thompkins@mariner-usa.com;wayne.snyder@mariner-usa.com"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Master Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineDim')]",
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineExtract')]",
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineWork')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimDelayPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "TransformLoadDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadDimDelay",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadDim",
                                "SourceTable": "Stage.Delay",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.Delay",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pDelay"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Dim Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/WaitDependencyTest')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Wait1",
                        "type": "Wait",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 30
                        }
                    },
                    {
                        "name": "Wait2",
                        "type": "Wait",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 15
                        }
                    },
                    {
                        "name": "Wait3",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "Wait1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Wait2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 5
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExtractYardPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Extract",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "ExtractYard",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "SourceTable": "ET.Yard",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Stage.Yard",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Stage.pYard"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Extract Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimDatePipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "TransformLoadDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadDimDate",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadDim",
                                "SourceTable": "DW.[Date]",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.[Date]",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pDate"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Dim Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExtractTimesheetPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Extract",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "ExtractTimesheet",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "SourceTable": "ET.Timesheet",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Stage.Timesheet",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Stage.pTimesheet"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Extract Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MasterPipelineDim')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "ExecDimAssetPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimAssetPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ExecDimAssetPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimCustomerPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimDatePipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimDelayPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDiEmployeePipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimWorkOrderPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimYardPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimJobPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline @{pipeline().Pipeline}  Success at @{utcnow()}\", \"Subject\": \"Pipeline Success - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ExecDimCustomerPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimCustomerPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimDatePipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimDatePipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@{formatDateTime(pipeline().parameters.ETLWindowStart,'yyyy-MM-dd HH:mm:ss')}",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@{formatDateTime(adddays(pipeline().parameters.ETLWindowEnd,32),'yyyy-MM-dd HH:mm:ss')}",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimDelayPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimDelayPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDiEmployeePipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimEmployeePipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimJobPipeline",
                        "description": "Runs on ExtractWindow + 1 day",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimJobPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@{formatDateTime(adddays(pipeline().parameters.ETLWindowStart,1),'yyyy-MM-dd HH:mm:ss')}",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@{formatDateTime(adddays(pipeline().parameters.ETLWindowEnd,1),'yyyy-MM-dd HH:mm:ss')}",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimWorkOrderPipeline",
                        "description": "Runs on ExtractWindow + 1 day",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimWorkOrderPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@{formatDateTime(adddays(pipeline().parameters.ETLWindowStart,1),'yyyy-MM-dd HH:mm:ss')}",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@{formatDateTime(adddays(pipeline().parameters.ETLWindowEnd,1),'yyyy-MM-dd HH:mm:ss')}",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimYardPipeline",
                        "description": "Runs on ExtractWindow + 1 day",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimYardPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@{formatDateTime(adddays(pipeline().parameters.ETLWindowStart,1),'yyyy-MM-dd HH:mm:ss')}",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@{formatDateTime(adddays(pipeline().parameters.ETLWindowEnd,1),'yyyy-MM-dd HH:mm:ss')}",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "angelia.thompkins@mariner-usa.com;wayne.snyder@mariner-usa.com"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Master Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/DimAssetPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimCustomerPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimDatePipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimDelayPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimEmployeePipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimJobPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimWorkOrderPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimYardPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MasterPipelineExtract')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "ExecExtractTimesheetPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractTimesheetPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ExecExtractTimesheetPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExeExtractThirdEyePipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecExtractDailyTaskPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecExtractDelayPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecExtractJobPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecExtractWeatherPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecExtractYardPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecExtractOSHAPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecWorkLocationPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecWorkUserListPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline @{pipeline().Pipeline}  Success at @{utcnow()}\", \"Subject\": \"Pipeline Success - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ExeExtractThirdEyePipeline",
                        "description": "This runs from midnight to midnight on the day prior to ETLWindowsStart.\nETLWindowStartDay -1 day (the Day Prior) 00:00:00 to ETLWindowStartDay 00:00:00 ",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractThirdEyePipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@{formatDateTime(adddays(pipeline().parameters.ETLWindowStart,-1),'yyyy-MM-dd')}",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@{formatDateTime(pipeline().parameters.ETLWindowStart,'yyyy-MM-dd')}",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractDailyTaskPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractDailyTaskPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractDelayPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractDelayPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractJobPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractJobPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractOSHAPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractOSHAPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractWeatherPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractWeatherPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractYardPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractYardPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecWorkUserListPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "WorkUserListPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecWorkLocationPipeline",
                        "description": "",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "WorkLocationPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Master Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ExtractTimesheetPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractThirdEyePipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractDailyTaskPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractDelayPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractJobPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractOSHAPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractWeatherPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractYardPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/WorkUserListPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/WorkLocationPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MasterPipelineFact')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Email Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ExecFactOSHAEventPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecFactDailyTaskPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecFactActivitySummaryPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline @{pipeline().Pipeline}  Success at @{utcnow()}\", \"Subject\": \"Pipeline Success - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ExecFactOSHAEventPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "FactOshaEventPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecFactDailyTaskPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractDailyTaskPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecFactActivitySummaryPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "FactActivitySummaryPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    },
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-05 13:00:00"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-06 13:00:00"
                    }
                },
                "folder": {
                    "name": "Master Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/FactOshaEventPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractDailyTaskPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/FactActivitySummaryPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExtractDelayPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Extract",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "ExtractDelay",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "SourceTable": "ET.Delay",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Stage.Delay",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Stage.pDelay"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Extract Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExtractOSHAPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Extract",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "ExtractOSHA",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "SourceTable": "ET.OSHA",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Stage.OSHA",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Stage.pOSHA"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Extract Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimAssetPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "TransformLoadDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadDimAsset",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadDim",
                                "SourceTable": "Stage.Timesheet",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.Asset",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pAsset"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Dim Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimYardPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "TransformLoadDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadDimYard",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadDim",
                                "SourceTable": "Stage.Delay",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.Yard",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pYard"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Dim Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TestZonarPTOPipelineCallsIterator')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Execute AssetIteratorPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "testzonarpipeline1",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Container": "zonarpto",
                                "StorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=piketeamzonarabs;AccountKey=W1Sc1Sk0aX/b7LR1f1qN+nYGGZgW+S6AYF+OKo/h8Bg9jAUbje2xJGieRJc8PiHOd7rO8TMj1e7nADzPpKEbnw==;EndpointSuffix=core.windows.net",
                                "ServiceUserName": "fw_upload",
                                "ServicePassword": "p1kef!eet",
                                "ServiceUrl": "http://pik3599.zonarsystems.net/interface.php?action=showopen&operation=pto&rpt_type=2&start=1516856400&end=1517720400&format=xml&target=272",
                                "FileLocation": {
                                    "value": "@concat(utcnow('yyyy-MM-dd'),'/PTO_',utcnow('yyyyMMddHHmmss'))",
                                    "type": "Expression"
                                },
                                "WebServiceUrl": "https://piketeamwebserviceutility.azurewebsites.net/api/WebServiceXMLToJson?code=nOSh3Nj6ePgPXpyalz0tqYZpTwFkey7sI5fhZJpFbMo4Dzz/DzqFcA==",
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "SourceTable": "ZonarPTOApi",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "ETLActivityName": "ExtractZonarPTO",
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "DestinationTable": "ET.PTO"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-15"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-16"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/testzonarpipeline1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimEmployeePipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "TransformLoadDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadDimEmployee",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadDim",
                                "SourceTable": "Stage.Timesheet",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.Employee",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pEmployee"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Dim Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimJobPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "TransformLoadDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadDimJob",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadDim",
                                "SourceTable": "Stage.Job",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.Job",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pJob"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Dim Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/FactTimesheetPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "TransformLoadFact",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadFactTimesheet",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadFact",
                                "SourceTable": "Stage.Timesheet",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.FactTimesheet",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pFactTimesheet"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadFact",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Fact Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathXmlWebSerivceToDateLakePipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "WebService",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.WebServiceUrl",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\"Container\":\"@{pipeline().parameters.Container}\",\n  \"StorageConnectionString\": \"@{pipeline().parameters.StorageConnectionString}\",\n           \"ServiceUserName\" : \"@{pipeline().parameters.ServiceUserName}\",\n           \"ServicePassword\" : \"@{pipeline().parameters.ServicePassword}\",\n  \"ServiceUrl\": \"@{pipeline().parameters.ServiceUrl}\",\n\"FileLocation\":\"@{pipeline().parameters.FileLocation}\",\n\"Format\":\"@{pipeline().parameters.Format}\"         \n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BlobSource",
                                "recursive": true
                            },
                            "sink": {
                                "type": "AzureDataLakeStoreSink",
                                "copyBehavior": {
                                    "value": "@utcnow()",
                                    "type": "Expression"
                                }
                            },
                            "enableStaging": false,
                            "cloudDataMovementUnits": 0,
                            "translator": {
                                "type": "TabularTranslator",
                                "columnMappings": {
                                    "AssetID": "AssetID",
                                    "EventCount": "EventCount",
                                    "regen_status": "regen_status",
                                    "dpf_dpressure": "dpf_dpressure",
                                    "afilter_dpressure": "afilter_dpressure",
                                    "ffilter_dpressure": "ffilter_dpressure",
                                    "boost_pressure": "boost_pressure",
                                    "average_torque": "average_torque",
                                    "peak_rpm": "peak_rpm",
                                    "outside_pressure": "outside_pressure",
                                    "fuel_level": "fuel_level",
                                    "avg_load": "avg_load",
                                    "avg_rpm": "avg_rpm",
                                    "air_temp": "air_temp",
                                    "zone": "zone",
                                    "address": "address",
                                    "fuel_units": "fuel_units",
                                    "fuel_counter": "fuel_counter",
                                    "status": "status",
                                    "accel": "accel",
                                    "loadts": "loadts",
                                    "odometer": "odometer",
                                    "distance_traveled": "distance_traveled",
                                    "reasons": "reasons",
                                    "heading": "heading",
                                    "speed": "speed",
                                    "time": "time",
                                    "long": "long",
                                    "lat": "lat"
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ZonarPathJsonBlob2bakup",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "@pipeline().parameters.Container",
                                    "FileLocation": "@pipeline().parameters.FileLocation"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ZonarPathADLFile",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "@pipeline().parameters.Container",
                                    "FileLocation": "@pipeline().parameters.Filelocation"
                                }
                            }
                        ]
                    },
                    {
                        "name": "ActivityBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityInsert]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineId": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLSliceEnd": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLTask": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLTask",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLSliceStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityBegin Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "WebService Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ActivityEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLStatus": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "RowsErrored": {
                                    "value": "0",
                                    "type": "Int64"
                                },
                                "RowsInserted": {
                                    "value": {
                                        "value": "@activity('CopyToDataLake').output.rowsCopied",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "RowsUpdated": {
                                    "value": "0",
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityEnd Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "StorageConnectionString": {
                        "type": "String"
                    },
                    "ServiceUserName": {
                        "type": "String"
                    },
                    "ServicePassword": {
                        "type": "String"
                    },
                    "ServiceUrl": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    },
                    "WebServiceUrl": {
                        "type": "String"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "SourceTable": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLTask": {
                        "type": "String"
                    },
                    "ETLActivityName": {
                        "type": "String"
                    },
                    "ETLPipelineID": {
                        "type": "String"
                    },
                    "ETLPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    },
                    "Format": {
                        "type": "String"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ZonarPathJsonBlob2bakup')]",
                "[concat(variables('factoryId'), '/datasets/ZonarPathADLFile')]",
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExtractJobPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Extract",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "ExtractJob",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "SourceTable": "ET.Job",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Stage.Job",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Stage.pJob"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Extract Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/FactDelayEventPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadFact",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "TransformLoadFact",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadFactDelayEvent",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadFact",
                                "SourceTable": "Stage.DelayEvent",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.FactDelayEvent",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pFactDelayEvent"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Fact Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarCurrentLocationPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Execute XMLWebServiceToDataLake",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ZonarCurrentLocationWebtoADLPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Container": "zonarcurrentlocation",
                                "StorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=piketeamzonarabs;AccountKey=W1Sc1Sk0aX/b7LR1f1qN+nYGGZgW+S6AYF+OKo/h8Bg9jAUbje2xJGieRJc8PiHOd7rO8TMj1e7nADzPpKEbnw==;EndpointSuffix=core.windows.net",
                                "ServiceUserName": "fw_upload",
                                "ServicePassword": "p1kef!eet",
                                "ServiceUrl": "http://pik3599.zonarsystems.net/interface.php?action=showposition&operation=current&format=xml&logvers=3&version=2",
                                "FileLocation": {
                                    "value": "@concat(utcnow('yyyy-MM-dd'),'/currentlocation_',utcnow('yyyyMMddHHmmss'))",
                                    "type": "Expression"
                                },
                                "WebServiceUrl": "https://piketeamwebserviceutility.azurewebsites.net/api/WebServiceXMLToJson?code=nOSh3Nj6ePgPXpyalz0tqYZpTwFkey7sI5fhZJpFbMo4Dzz/DzqFcA==",
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "SourceTable": "ZonarCurrentLocationApi",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "ETLActivityName": "ExtractZonarCurrentLocation",
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "DestinationTable": "ET.CurrentLocation"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-15"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-16"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ZonarCurrentLocationWebtoADLPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarCurrentLocationWebtoADLPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "WebService",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.WebServiceUrl",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\"Container\":\"@{pipeline().parameters.Container}\",\n  \"StorageConnectionString\": \"@{pipeline().parameters.StorageConnectionString}\",\n           \"ServiceUserName\" : \"@{pipeline().parameters.ServiceUserName}\",\n           \"ServicePassword\" : \"@{pipeline().parameters.ServicePassword}\",\n  \"ServiceUrl\": \"@{pipeline().parameters.ServiceUrl}\",\n\"FileLocation\":\"@{pipeline().parameters.FileLocation}\"           \n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BlobSource",
                                "recursive": true
                            },
                            "sink": {
                                "type": "AzureDataLakeStoreSink",
                                "copyBehavior": {
                                    "value": "@utcnow()",
                                    "type": "Expression"
                                }
                            },
                            "enableStaging": false,
                            "cloudDataMovementUnits": 0,
                            "translator": {
                                "type": "TabularTranslator",
                                "columnMappings": {
                                    "tagid": "tagid",
                                    "fleet": "fleet",
                                    "id": "id",
                                    "type": "type",
                                    "long": "long",
                                    "lat": "lat",
                                    "heading": "heading",
                                    "time": "time",
                                    "units": "units",
                                    "speed": "speed",
                                    "power": "power",
                                    "CreateDate": "CreateDate"
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ZonarCurrentLocationJsonBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.Container",
                                        "type": "Expression"
                                    },
                                    "FileLocation": {
                                        "value": "@pipeline().parameters.FileLocation",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ZonarCurrentLocationADLFile",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.Container",
                                        "type": "Expression"
                                    },
                                    "FileLocation": {
                                        "value": "@pipeline().parameters.FileLocation",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ActivityBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityInsert]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineId": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLSliceEnd": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLTask": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLTask",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLSliceStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityBegin Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "WebService Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('WebService').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('CopyToDataLake').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ActivityEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLStatus": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "RowsErrored": {
                                    "value": "0",
                                    "type": "Int64"
                                },
                                "RowsInserted": {
                                    "value": {
                                        "value": "@activity('CopyToDataLake').output.rowsCopied",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "RowsUpdated": {
                                    "value": "0",
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityEnd Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "StorageConnectionString": {
                        "type": "String"
                    },
                    "ServiceUserName": {
                        "type": "String"
                    },
                    "ServicePassword": {
                        "type": "String"
                    },
                    "ServiceUrl": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    },
                    "WebServiceUrl": {
                        "type": "String"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "SourceTable": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLTask": {
                        "type": "String"
                    },
                    "ETLActivityName": {
                        "type": "String"
                    },
                    "ETLPipelineID": {
                        "type": "String"
                    },
                    "ETLPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ZonarCurrentLocationJsonBlob')]",
                "[concat(variables('factoryId'), '/datasets/ZonarCurrentLocationADLFile')]",
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Execute ZonarPathXMLWebServiceToDataLakePipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ComputeEpochDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ZonarPathXmlWebSerivceToDateLakePipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Container": "zonarpath",
                                "StorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=piketeamzonarabs;AccountKey=W1Sc1Sk0aX/b7LR1f1qN+nYGGZgW+S6AYF+OKo/h8Bg9jAUbje2xJGieRJc8PiHOd7rO8TMj1e7nADzPpKEbnw==;EndpointSuffix=core.windows.net",
                                "ServiceUserName": "fw_upload",
                                "ServicePassword": "p1kef!eet",
                                "ServiceUrl": {
                                    "value": "http://pik3599.zonarsystems.net/interface.php?action=showposition&operation=path&rpt_type=Standard&version=2&starttime=@{activity('ComputeEpochDates').output.firstRow.EpochStart}&endtime=@{activity('ComputeEpochDates').output.firstRow.EpochEnd}&logvers=3.7&format=xml",
                                    "type": "Expression"
                                },
                                "FileLocation": {
                                    "value": "@concat(utcnow('yyyy-MM-dd'),'/zonarpath_',utcnow('yyyyMMddHHmmss'))",
                                    "type": "Expression"
                                },
                                "WebServiceUrl": "https://piketeamwebserviceutility.azurewebsites.net/api/WebServiceXMLToJson?code=nOSh3Nj6ePgPXpyalz0tqYZpTwFkey7sI5fhZJpFbMo4Dzz/DzqFcA==",
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "SourceTable": "ZonarPathApi",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "ETLActivityName": "ExtractZonarPath",
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "DestinationTable": "ET.Path"
                            }
                        }
                    },
                    {
                        "name": "ComputeEpochDates",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowStart}') ) AS EpochStart\n\t  ,CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowEnd}') -1) AS EpochEnd",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDWETLPipelineInstance",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-01 09:00:00"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-01 09:01:00"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ZonarPathXmlWebSerivceToDateLakePipeline')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDWETLPipelineInstance')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPTOAPIToADLPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "WebService",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.WebServiceUrl",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\"Container\":\"@{pipeline().parameters.Container}\",\n  \"StorageConnectionString\": \"@{pipeline().parameters.StorageConnectionString}\",\n           \"ServiceUserName\" : \"@{pipeline().parameters.ServiceUserName}\",\n           \"ServicePassword\" : \"@{pipeline().parameters.ServicePassword}\",\n  \"ServiceUrl\": \"@{pipeline().parameters.ServiceUrl}\",\n\"FileLocation\":\"@{pipeline().parameters.FileLocation}\"           \n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BlobSource",
                                "recursive": true
                            },
                            "sink": {
                                "type": "AzureDataLakeStoreSink",
                                "copyBehavior": {
                                    "value": "@utcnow()",
                                    "type": "Expression"
                                }
                            },
                            "enableStaging": false,
                            "cloudDataMovementUnits": 0,
                            "translator": {
                                "type": "TabularTranslator",
                                "columnMappings": {
                                    "assetid": "assetid",
                                    "fleet": "fleet",
                                    "?xml.@version": "qrt_idles",
                                    "set_total_idle_time": "set_total_idle_time",
                                    "set_pto_dur": "set_pto_dur",
                                    "set_pto_diff": "set_pto_diff",
                                    "viol_count": "viol_count",
                                    "CreateDate": "CreateDate"
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ZonarPTOJsonBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "@pipeline().parameters.Container",
                                    "FileLocation": "@pipeline().parameters.FileLocation"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "AzurePTODataLakeStoreFile",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "@pipeline().parameters.Container",
                                    "FileLocation": "@pipeline().parameters.FileLocation"
                                }
                            }
                        ]
                    },
                    {
                        "name": "ActivityBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityInsert]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineId": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLSliceEnd": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLTask": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLTask",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLSliceStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityBegin Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "WebService Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ActivityEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLStatus": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "RowsErrored": {
                                    "value": "0",
                                    "type": "Int64"
                                },
                                "RowsInserted": {
                                    "value": {
                                        "value": "@activity('CopyToDataLake').output.rowsCopied",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "RowsUpdated": {
                                    "value": "0",
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityEnd Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "StorageConnectionString": {
                        "type": "String"
                    },
                    "ServiceUserName": {
                        "type": "String"
                    },
                    "ServicePassword": {
                        "type": "String"
                    },
                    "ServiceUrl": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    },
                    "WebServiceUrl": {
                        "type": "String"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "SourceTable": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLTask": {
                        "type": "String"
                    },
                    "ETLActivityName": {
                        "type": "String"
                    },
                    "ETLPipelineID": {
                        "type": "String"
                    },
                    "ETLPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ZonarPTOJsonBlob')]",
                "[concat(variables('factoryId'), '/datasets/AzurePTODataLakeStoreFile')]",
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarMileagePipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Execute ZonarPTOAPIToADLPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ComputeEpochDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ZonarPTOAPIToADLPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Container": "zonarmileage",
                                "StorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=piketeamzonarabs;AccountKey=W1Sc1Sk0aX/b7LR1f1qN+nYGGZgW+S6AYF+OKo/h8Bg9jAUbje2xJGieRJc8PiHOd7rO8TMj1e7nADzPpKEbnw==;EndpointSuffix=core.windows.net",
                                "ServiceUserName": "fw_upload",
                                "ServicePassword": "p1kef!eet",
                                "ServiceUrl": {
                                    "value": "http://pik3599.zonarsystems.net/interface.php?action=showposition&operation=mileage&fromdate=@{activity('ComputeEpochDates').output.firstRow.EpochStart}&todate=@{activity('ComputeEpochDates').output.firstRow.EpochEnd}&format=xml",
                                    "type": "Expression"
                                },
                                "FileLocation": {
                                    "value": "@concat(utcnow('yyyy-MM-dd'),'/mileage_',utcnow('yyyyMMddHHmmss'))",
                                    "type": "Expression"
                                },
                                "WebServiceUrl": "https://piketeamwebserviceutility.azurewebsites.net/api/WebServiceXMLToJson?code=nOSh3Nj6ePgPXpyalz0tqYZpTwFkey7sI5fhZJpFbMo4Dzz/DzqFcA==",
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "SourceTable": "ZonarMileageApi",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "ETLActivityName": "ExtractZonarMileage",
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "DestinationTable": "ET.Mileage"
                            }
                        }
                    },
                    {
                        "name": "ComputeEpochDates",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowStart}') ) AS EpochStart\n\t  ,CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowEnd}') -1) AS EpochEnd",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDWETLPipelineInstance",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-11 "
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-12"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ZonarPTOAPIToADLPipeline')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDWETLPipelineInstance')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarMileageAPIToADLPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "WebService",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.WebServiceUrl",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\"Container\":\"@{pipeline().parameters.Container}\",\n  \"StorageConnectionString\": \"@{pipeline().parameters.StorageConnectionString}\",\n           \"ServiceUserName\" : \"@{pipeline().parameters.ServiceUserName}\",\n           \"ServicePassword\" : \"@{pipeline().parameters.ServicePassword}\",\n  \"ServiceUrl\": \"@{pipeline().parameters.ServiceUrl}\",\n\"FileLocation\":\"@{pipeline().parameters.FileLocation}\"           \n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BlobSource",
                                "recursive": true
                            },
                            "sink": {
                                "type": "AzureDataLakeStoreSink",
                                "copyBehavior": {
                                    "value": "@utcnow()",
                                    "type": "Expression"
                                }
                            },
                            "enableStaging": false,
                            "cloudDataMovementUnits": 0,
                            "translator": {
                                "type": "TabularTranslator",
                                "columnMappings": {
                                    "CreateDate": "CreateDate",
                                    "?xml.@version": "?xml.@version",
                                    "gpsmileagelist.@ver": "gpsmileagelist.@ver",
                                    "gpsmileagelist.@count": "gpsmileagelist.@count",
                                    "gpsmileagelist.@total": "gpsmileagelist.@total",
                                    "gpsmileagelist.@start": "gpsmileagelist.@start",
                                    "gpsmileagelist.@end": "gpsmileagelist.@end",
                                    "gpsmileagelist.@unit": "gpsmileagelist.@unit",
                                    "gpsmileagelist.assetdist": "gpsmileagelist.assetdist",
                                    "@tag": "@tag",
                                    "@fleet": "@fleet",
                                    "@type": "@type",
                                    "@id": "@id",
                                    "from": "from",
                                    "to": "to",
                                    "name": "name",
                                    "distance": "distance"
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ZonarMileageJsonBLob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "@pipeline().parameters.Container",
                                    "FileLocation": "@pipeline().parameters.FileLocation"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ZonarMileageADLFile",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "ActivityBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityInsert]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineId": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLSliceEnd": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLTask": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLTask",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLSliceStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityBegin Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "WebService Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ActivityEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLStatus": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "RowsErrored": {
                                    "value": "0",
                                    "type": "Int64"
                                },
                                "RowsInserted": {
                                    "value": {
                                        "value": "@activity('CopyToDataLake').output.rowsCopied",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "RowsUpdated": {
                                    "value": "0",
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityEnd Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "StorageConnectionString": {
                        "type": "String"
                    },
                    "ServiceUserName": {
                        "type": "String"
                    },
                    "ServicePassword": {
                        "type": "String"
                    },
                    "ServiceUrl": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    },
                    "WebServiceUrl": {
                        "type": "String"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "SourceTable": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLTask": {
                        "type": "String"
                    },
                    "ETLActivityName": {
                        "type": "String"
                    },
                    "ETLPipelineID": {
                        "type": "String"
                    },
                    "ETLPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ZonarMileageJsonBLob')]",
                "[concat(variables('factoryId'), '/datasets/ZonarMileageADLFile')]",
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPTOPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Execute ZonarPTOAPIToADLPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ComputeEpochDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ZonarPTOAPIToADLPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Container": "zonarpto",
                                "StorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=piketeamzonarabs;AccountKey=W1Sc1Sk0aX/b7LR1f1qN+nYGGZgW+S6AYF+OKo/h8Bg9jAUbje2xJGieRJc8PiHOd7rO8TMj1e7nADzPpKEbnw==;EndpointSuffix=core.windows.net",
                                "ServiceUserName": "fw_upload",
                                "ServicePassword": "p1kef!eet",
                                "ServiceUrl": {
                                    "value": "http://pik3599.zonarsystems.net/interface.php?action=showopen&operation=pto&rpt_type=2&start=@{activity('ComputeEpochDates').output.firstRow.EpochStart}&end=@{activity('ComputeEpochDates').output.firstRow.EpochEnd}&format=xml&target=727",
                                    "type": "Expression"
                                },
                                "FileLocation": {
                                    "value": "@concat(utcnow('yyyy-MM-dd'),'/PTO_',utcnow('yyyyMMddHHmmss'))",
                                    "type": "Expression"
                                },
                                "WebServiceUrl": "https://piketeamwebserviceutility.azurewebsites.net/api/WebServiceXMLToJson?code=nOSh3Nj6ePgPXpyalz0tqYZpTwFkey7sI5fhZJpFbMo4Dzz/DzqFcA==",
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "SourceTable": "ZonarPTOApi",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "ETLActivityName": "ExtractZonarPTO",
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "DestinationTable": "ET.PTO"
                            }
                        }
                    },
                    {
                        "name": "ComputeEpochDates",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowStart}') ) AS EpochStart\n\t  ,CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowEnd}') -1) AS EpochEnd",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDWETLPipelineInstance",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-11 "
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-12"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ZonarPTOAPIToADLPipeline')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDWETLPipelineInstance')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/testZonarPTO')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "WebService",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.WebServiceUrl",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\"Container\":\"@{pipeline().parameters.Container}\",\n  \"StorageConnectionString\": \"@{pipeline().parameters.StorageConnectionString}\",\n           \"ServiceUserName\" : \"@{pipeline().parameters.ServiceUserName}\",\n           \"ServicePassword\" : \"@{pipeline().parameters.ServicePassword}\",\n  \"ServiceUrl\": \"@{pipeline().parameters.ServiceUrl}\",\n\"FileLocation\":\"@{pipeline().parameters.FileLocation}\"           \n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BlobSource",
                                "recursive": true
                            },
                            "sink": {
                                "type": "AzureDataLakeStoreSink",
                                "copyBehavior": {
                                    "value": "@utcnow()",
                                    "type": "Expression"
                                }
                            },
                            "enableStaging": false,
                            "cloudDataMovementUnits": 0,
                            "translator": {
                                "type": "TabularTranslator",
                                "columnMappings": {
                                    "assetid": "assetid",
                                    "fleet": "fleet",
                                    "qty_idles": "qrt_idles",
                                    "set_total_idle_time": "set_total_idle_time",
                                    "set_pto_dur": "set_pto_dur",
                                    "set_pto_diff": "set_pto_diff",
                                    "viol_count": "viol_count",
                                    "CreateDate": "CreateDate"
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ZonarPTOJsonBlob",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "@pipeline().parameters.Container",
                                    "FileLocation": "@pipeline().parameters.FileLocation"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "AzurePTODataLakeStoreFile",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": "@pipeline().parameters.Container",
                                    "FileLocation": "@pipeline().parameters.FileLocation"
                                }
                            }
                        ]
                    },
                    {
                        "name": "ActivityBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityInsert]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineId": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLSliceEnd": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLTask": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLTask",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLSliceStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityBegin Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "WebService Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ActivityEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLStatus": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "RowsErrored": {
                                    "value": "0",
                                    "type": "Int64"
                                },
                                "RowsInserted": {
                                    "value": {
                                        "value": "@activity('CopyToDataLake').output.rowsCopied",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "RowsUpdated": {
                                    "value": "0",
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityEnd Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "StorageConnectionString": {
                        "type": "String"
                    },
                    "ServiceUserName": {
                        "type": "String"
                    },
                    "ServicePassword": {
                        "type": "String"
                    },
                    "ServiceUrl": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    },
                    "WebServiceUrl": {
                        "type": "String"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "SourceTable": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLTask": {
                        "type": "String"
                    },
                    "ETLActivityName": {
                        "type": "String"
                    },
                    "ETLPipelineID": {
                        "type": "String"
                    },
                    "ETLPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ZonarPTOJsonBlob')]",
                "[concat(variables('factoryId'), '/datasets/AzurePTODataLakeStoreFile')]",
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/testzonarpipeline1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "ActivityBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityInsert]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineId": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLSliceEnd": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLTask": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLTask",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLSliceStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityBegin Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ActivityEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLStatus": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "RowsErrored": {
                                    "value": "0",
                                    "type": "Int64"
                                },
                                "RowsInserted": {
                                    "value": {
                                        "value": "test",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "RowsUpdated": {
                                    "value": "0",
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityEnd Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "LoadAssetDataSet",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "Select top 5 AssetNumber \nFROM DW.Asset \nWHERE LEFT(AssetNumber,2) in ('20','08')",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "AssetIteratorDataSet",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LoadAssetDataSet",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LoadAssetDataSet').output",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Execute ZonarPTOAPIToADLPipeline",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "tspipeline1",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Container": "pto",
                                            "StorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=piketeamzonarabs;AccountKey=W1Sc1Sk0aX/b7LR1f1qN+nYGGZgW+S6AYF+OKo/h8Bg9jAUbje2xJGieRJc8PiHOd7rO8TMj1e7nADzPpKEbnw==;EndpointSuffix=core.windows.net",
                                            "ServiceUserName": "fw_upload",
                                            "ServicePassword": "p1kef!eet",
                                            "ServiceUrl": "http://pik3599.zonarsystems.net/interface.php?action=showopen&operation=pto&rpt_type=2&start=1516856400&end=1517720400&format=xml&target=272",
                                            "FileLocation": {
                                                "value": "@concat(utcnow('yyyy-MM-dd'),'/pto_',utcnow('yyyyMMddHHmmss'))",
                                                "type": "Expression"
                                            },
                                            "WebServiceUrl": "https://piketeamwebserviceutility.azurewebsites.net/api/WebServiceXMLToJson?code=nOSh3Nj6ePgPXpyalz0tqYZpTwFkey7sI5fhZJpFbMo4Dzz/DzqFcA==",
                                            "ETLWindowStart": {
                                                "value": "@pipeline().parameters.ETLWindowStart",
                                                "type": "Expression"
                                            },
                                            "SourceTable": "ZonarPTOApi",
                                            "ETLWindowEnd": {
                                                "value": "@pipeline().parameters.ETLWindowEnd",
                                                "type": "Expression"
                                            },
                                            "ETLTask": "Extract",
                                            "ETLActivityName": "ExtractZonarPTO",
                                            "ETLPipelineID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "ETLPipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "NotificationList": {
                                                "value": "@pipeline().parameters.NotificationList",
                                                "type": "Expression"
                                            },
                                            "DestinationTable": "ET.PTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Web1",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.WebServiceUrl",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\"Container\":\"@{pipeline().parameters.Container}\",\n  \"StorageConnectionString\": \"@{pipeline().parameters.StorageConnectionString}\",\n           \"ServiceUserName\" : \"@{pipeline().parameters.ServiceUserName}\",\n           \"ServicePassword\" : \"@{pipeline().parameters.ServicePassword}\",\n  \"ServiceUrl\": \"@{pipeline().parameters.ServiceUrl}\",\n\"FileLocation\":\"@{pipeline().parameters.FileLocation}\"           \n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "StorageConnectionString": {
                        "type": "String"
                    },
                    "ServiceUserName": {
                        "type": "String"
                    },
                    "ServicePassword": {
                        "type": "String"
                    },
                    "ServiceUrl": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    },
                    "WebServiceUrl": {
                        "type": "String"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "SourceTable": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLTask": {
                        "type": "String"
                    },
                    "ETLActivityName": {
                        "type": "String"
                    },
                    "ETLPipelineID": {
                        "type": "String"
                    },
                    "ETLPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/datasets/AssetIteratorDataSet')]",
                "[concat(variables('factoryId'), '/pipelines/tspipeline1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tspipeline1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "WebService",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.WebServiceUrl",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\"Container\":\"@{pipeline().parameters.Container}\",\n  \"StorageConnectionString\": \"@{pipeline().parameters.StorageConnectionString}\",\n           \"ServiceUserName\" : \"@{pipeline().parameters.ServiceUserName}\",\n           \"ServicePassword\" : \"@{pipeline().parameters.ServicePassword}\",\n  \"ServiceUrl\": \"@{pipeline().parameters.ServiceUrl}\",\n\"FileLocation\":\"@{pipeline().parameters.FileLocation}\"           \n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "StorageConnectionString": {
                        "type": "String"
                    },
                    "ServiceUserName": {
                        "type": "String"
                    },
                    "ServicePassword": {
                        "type": "String"
                    },
                    "ServiceUrl": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    },
                    "WebServiceUrl": {
                        "type": "String"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "SourceTable": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLTask": {
                        "type": "String"
                    },
                    "ETLActivityName": {
                        "type": "String"
                    },
                    "ETLPipelineID": {
                        "type": "String"
                    },
                    "ETLPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarAssetPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Execute ZonarPathXMLWebServiceToDataLakePipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ComputeEpochDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ZonarPathXmlWebSerivceToDateLakePipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Container": "asset",
                                "StorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=piketeamzonarabs;AccountKey=W1Sc1Sk0aX/b7LR1f1qN+nYGGZgW+S6AYF+OKo/h8Bg9jAUbje2xJGieRJc8PiHOd7rO8TMj1e7nADzPpKEbnw==;EndpointSuffix=core.windows.net",
                                "ServiceUserName": "fw_upload",
                                "ServicePassword": "p1kef!eet",
                                "ServiceUrl": {
                                    "value": "http://pik3599.zonarsystems.net/interface.php?action=showposition&operation=current&format=csv&logvers=3&version=2",
                                    "type": "Expression"
                                },
                                "FileLocation": {
                                    "value": "@concat(utcnow('yyyy-MM-dd'),'/zonarpath_',utcnow('yyyyMMddHHmmss'))",
                                    "type": "Expression"
                                },
                                "WebServiceUrl": "https://piketeamwebserviceutility.azurewebsites.net/api/WebServiceXMLToJson?code=nOSh3Nj6ePgPXpyalz0tqYZpTwFkey7sI5fhZJpFbMo4Dzz/DzqFcA==",
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "SourceTable": "ZonarAssetApi",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "ETLActivityName": "ExtractZonarAsset",
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "DestinationTable": "ET.Asset",
                                "Format": "CSV"
                            }
                        }
                    },
                    {
                        "name": "ComputeEpochDates",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowStart}') ) AS EpochStart\n\t  ,CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowEnd}') -1) AS EpochEnd",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDWETLPipelineInstance",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-16 09:00:00"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-16 09:15:00"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ZonarPathXmlWebSerivceToDateLakePipeline')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDWETLPipelineInstance')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExtractZonarPathPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Extract",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "ExtractZonarPath",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "SourceTable": "ET.ZonarPath",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Stage.ZonarPath",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Stage.pZonarPath"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-16 00:00:00"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-16 00:00:00"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Extract Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimCustomerPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "TransformLoadDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadDimCustomer",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadDim",
                                "SourceTable": "Stage.Job",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.Customer",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pCustomer"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Dim Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExecZonarPathPiplineAPItoCSV')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Execute ZonarPathAPICSVtoADLPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ComputeEpochDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ZonarPathAPICSVToADLPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Container": "zonarpathcsv",
                                "StorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=piketeamzonarabs;AccountKey=W1Sc1Sk0aX/b7LR1f1qN+nYGGZgW+S6AYF+OKo/h8Bg9jAUbje2xJGieRJc8PiHOd7rO8TMj1e7nADzPpKEbnw==;EndpointSuffix=core.windows.net",
                                "ServiceUserName": "fw_upload",
                                "ServicePassword": "p1kef!eet",
                                "ServiceUrl": {
                                    "value": "http://pik3599.zonarsystems.net/interface.php?action=showposition&operation=path&rpt_type=Standard&version=2&starttime=@{activity('ComputeEpochDates').output.firstRow.EpochStart}&endtime=@{activity('ComputeEpochDates').output.firstRow.EpochEnd}&logvers=3.8&format=csv",
                                    "type": "Expression"
                                },
                                "FileLocation": {
                                    "value": "@concat(utcnow('yyyy-MM-dd'),'/zonarpath_',utcnow('yyyyMMddHHmmss'))",
                                    "type": "Expression"
                                },
                                "WebServiceUrl": "https://piketeamwebserviceutility.azurewebsites.net/api/WebServiceXMLToJson?code=nOSh3Nj6ePgPXpyalz0tqYZpTwFkey7sI5fhZJpFbMo4Dzz/DzqFcA==",
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "SourceTable": "ZonarPathApi",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLTask": "API",
                                "ETLActivityName": "APIZonarPath",
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "DestinationTable": "ET.Path",
                                "Format": "CSV"
                            }
                        }
                    },
                    {
                        "name": "ComputeEpochDates",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowStart}') ) AS EpochStart\n\t  ,CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowEnd}') -1) AS EpochEnd",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDWETLPipelineInstance",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-16 00:00:00"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-16 4:00:00"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ZonarPathAPICSVToADLPipeline')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDWETLPipelineInstance')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathAPICSVToADLPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "WebService",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().parameters.WebServiceUrl",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\"Container\":\"@{pipeline().parameters.Container}\",\n  \"StorageConnectionString\": \"@{pipeline().parameters.StorageConnectionString}\",\n           \"ServiceUserName\" : \"@{pipeline().parameters.ServiceUserName}\",\n           \"ServicePassword\" : \"@{pipeline().parameters.ServicePassword}\",\n  \"ServiceUrl\": \"@{pipeline().parameters.ServiceUrl}\",\n\"FileLocation\":\"@{pipeline().parameters.FileLocation}\",\n\"Format\":\"@{pipeline().parameters.Format}\"         \n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [
                            {
                                "name": "Source",
                                "value": "@{pipeline().parameters.Container}/@{pipeline().parameters.FileLocation}"
                            },
                            {
                                "name": "Destination",
                                "value": "@{pipeline().parameters.Container}/@{pipeline().parameters.FileLocation}"
                            }
                        ],
                        "typeProperties": {
                            "source": {
                                "type": "BlobSource",
                                "recursive": true
                            },
                            "sink": {
                                "type": "AzureDataLakeStoreSink",
                                "copyBehavior": {
                                    "value": "@utcnow()",
                                    "type": "Expression"
                                }
                            },
                            "enableStaging": false,
                            "cloudDataMovementUnits": 0,
                            "translator": {
                                "type": "TabularTranslator",
                                "columnMappings": {
                                    "Asset ID": "Asset ID",
                                    "Asset No.": "Asset No.",
                                    "Date": "Date",
                                    "Time(EDT)": "Time(EDT)",
                                    "Speed(MPH)": "Speed(MPH)",
                                    "Heading": "Heading",
                                    "Log Reason": "Log Reason",
                                    "Distance Traveled(Miles)": "Distance Travelled",
                                    "Lat": "Lat",
                                    "Lon": "Lon",
                                    "Zone": "Zone",
                                    "Address": "Address",
                                    "Source": "Source"
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ZonarPathCSVBlobV38",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.Container",
                                        "type": "Expression"
                                    },
                                    "FileLocation": {
                                        "value": "@pipeline().parameters.FileLocation",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ZonarPathADLFileV38",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().parameters.Container",
                                        "type": "Expression"
                                    },
                                    "FileLocation": {
                                        "value": "@pipeline().parameters.FileLocation",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ActivityBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityInsert]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineId": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLSliceEnd": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLTask": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLTask",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLSliceStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityBegin Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "WebService Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "WebService",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyToDataLake Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ActivityEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "CopyToDataLake",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pActivityUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLStatus": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "RowsErrored": {
                                    "value": "0",
                                    "type": "Int64"
                                },
                                "RowsInserted": {
                                    "value": {
                                        "value": "@activity('CopyToDataLake').output.rowsCopied",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "RowsUpdated": {
                                    "value": "0",
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ActivityEnd Send Failure Email",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ActivityEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Activity @{pipeline().parameters.ETLActivityName}  Failure - @{activity('ActivityBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "StorageConnectionString": {
                        "type": "String"
                    },
                    "ServiceUserName": {
                        "type": "String"
                    },
                    "ServicePassword": {
                        "type": "String"
                    },
                    "ServiceUrl": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    },
                    "WebServiceUrl": {
                        "type": "String"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "SourceTable": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLTask": {
                        "type": "String"
                    },
                    "ETLActivityName": {
                        "type": "String"
                    },
                    "ETLPipelineID": {
                        "type": "String"
                    },
                    "ETLPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    },
                    "Format": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "API To ADL"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ZonarPathCSVBlobV38')]",
                "[concat(variables('factoryId'), '/datasets/ZonarPathADLFileV38')]",
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExecZonarPathAPICall5minutes')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Execute ZonarPathAPICSVtoADLPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ComputeEpochDates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ZonarPathAPICSVToADLPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Container": "zonarpathcsv",
                                "StorageConnectionString": "DefaultEndpointsProtocol=https;AccountName=piketeamzonarabs;AccountKey=W1Sc1Sk0aX/b7LR1f1qN+nYGGZgW+S6AYF+OKo/h8Bg9jAUbje2xJGieRJc8PiHOd7rO8TMj1e7nADzPpKEbnw==;EndpointSuffix=core.windows.net",
                                "ServiceUserName": "fw_upload",
                                "ServicePassword": "p1kef!eet",
                                "ServiceUrl": {
                                    "value": "http://pik3599.zonarsystems.net/interface.php?action=showposition&operation=path&rpt_type=Standard&version=2&starttime=@{activity('ComputeEpochDates').output.firstRow.EpochStart}&endtime=@{activity('ComputeEpochDates').output.firstRow.EpochEnd}&logvers=3.8&format=csv",
                                    "type": "Expression"
                                },
                                "FileLocation": {
                                    "value": "@concat(utcnow('yyyy-MM-dd'),'/zonarpath_',utcnow('yyyyMMddHHmmss'))",
                                    "type": "Expression"
                                },
                                "WebServiceUrl": "https://piketeamwebserviceutility.azurewebsites.net/api/WebServiceXMLToJson?code=nOSh3Nj6ePgPXpyalz0tqYZpTwFkey7sI5fhZJpFbMo4Dzz/DzqFcA==",
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "SourceTable": "ZonarPathApi",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLTask": "API",
                                "ETLActivityName": "APIZonarPath",
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "DestinationTable": "ET.Path",
                                "Format": "CSV"
                            }
                        }
                    },
                    {
                        "name": "ComputeEpochDates",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowStart}') ) AS EpochStart\n\t  ,CONVERT(VARCHAR(20),DATEDIFF(ss,'1970-01-01','@{pipeline().parameters.ETLWindowEnd}') -1) AS EpochEnd",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDWETLPipelineInstance",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-16 00:00:00"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-16 4:00:00"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "API To ADL"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ZonarPathAPICSVToADLPipeline')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDWETLPipelineInstance')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MasterPipelineZonar5Minute')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Execute API Call",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExecZonarPathAPICall5minutes",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Execute ExtractZonarPathPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute API Call",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractZonarPathPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "NotificationList": {
                        "type": "String"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Master Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ExecZonarPathAPICall5minutes')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractZonarPathPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExtractDailyTaskPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Extract",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "ExtractDailyTask",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "SourceTable": "ET.DailyTask",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Stage.DailyTask",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Stage.pDailyTask"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Extract Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/FactOshaEventPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadFact",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "TransformLoadFact",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadFactOshaEvent",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadFact",
                                "SourceTable": "Stage.OSHA",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.FactOshaEvent",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pFactOshaEvent"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Fact Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/FactCurrentActivityPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "description": "ETL Parameters are Unused in the Sp. The are included only for ETL mg is moves the most recent locations within the last 60 minutes From Stage.ZonarPath to DW..FactCurrentActivity.",
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadFact",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "TransformLoadFact",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadFactCurrentActivity",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadFact",
                                "SourceTable": "Stage.ZonarPath",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.FactCurrentActivity",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pFactCurrentActivity"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Fact Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExtractThirdEyePipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Extract",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "ExtractThirdEye",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "SourceTable": "ET.ThirdEye",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Stage.ThirdEye",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Stage.pThirdEye"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Extract Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/WorkLocationPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "TransformLoadWork",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadWorkLocation",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadWork",
                                "SourceTable": "ET.Location_Fuel",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Work.Location",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Work.pLocation"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadWork",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Work Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExtractWeatherPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Extract",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "ExtractWeather",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "Extract",
                                "SourceTable": "ET.Weather",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Stage.Weather",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Stage.pWeather"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Extract Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimWorkOrderPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "TransformLoadDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadDimWorkOrder",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadDim",
                                "SourceTable": "Stage.Timesheet",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.WorkOrder",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pWorkOrder"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Dim Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/WorkUserListPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "TransformLoadWork",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadWorkUserList",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadWork",
                                "SourceTable": "ET.UserList",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "Work.UserList",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "Work.pUserList"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadWork",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String"
                    },
                    "NotificationList": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Work Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MasterPipelineWork')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "ExecWorkLocationPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "WorkLocationPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ExecWorkLocationPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecWorkUserListPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline @{pipeline().Pipeline}  Success at @{utcnow()}\", \"Subject\": \"Pipeline Success - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ExecWorkUserListPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "WorkUserListPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "angelia.thompkins@mariner-usa.com;wayne.snyder@mariner-usa.com"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Master Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/WorkLocationPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/WorkUserListPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GenericExec')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Gen",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractDelayPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Gen",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline @{pipeline().Pipeline}  Success at @{utcnow()}\", \"Subject\": \"Pipeline Success - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wyne.snyder@mariner-usa.com"
                    },
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-29"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-30"
                    }
                },
                "folder": {
                    "name": "TempBackfill"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ExtractDelayPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExecWorkUserListPIpeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "ExecExtractWorkUserListPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "WorkUserListPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ExecExtractWorkUserListPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline @{pipeline().Pipeline}  Success at @{utcnow()}\", \"Subject\": \"Pipeline Success - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wyne.snyder@mariner-usa.com"
                    },
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-29"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-30"
                    }
                },
                "folder": {
                    "name": "TempBackfill"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/WorkUserListPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/FactActivitySummaryPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "PipelineBegin",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineInsert]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLWindowStart": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowStart",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "ETLMasterPipelineID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLMasterPipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLMasterPipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "TransformLoadFact",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ActivityPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLActivityName": "TransformLoadFactActivitySummary",
                                "ETLPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ETLTask": "TransformLoadFact",
                                "SourceTable": "Stage.ZonarPath",
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "DestinationTable": "DW.FactActivitySummary",
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                },
                                "StoredProcedureName": "DW.pFactActivitySummary"
                            }
                        }
                    },
                    {
                        "name": "PipelineEnd",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "TransformLoadFact",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[concat('[', 'ETL].[pPipelineUpdate]')]",
                            "storedProcedureParameters": {
                                "ETLPipelineID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLPipelineName": {
                                    "value": {
                                        "value": "@pipeline().Pipeline",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ETLWindowEnd": {
                                    "value": {
                                        "value": "@pipeline().parameters.ETLWindowEnd",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "piketeamasdw",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline Begin",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineBegin",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineBegin').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Send Failure Email Pipeline End",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PipelineEnd",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline Failure - @{activity('PipelineEnd').error.message}\",\n    \"subject\": \"Pipeline Failure - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "ETLWindowStart": {
                        "type": "String",
                        "defaultValue": "2018-05-06 13:00:00"
                    },
                    "ETLWindowEnd": {
                        "type": "String",
                        "defaultValue": "2018-05-07 13:00:00"
                    },
                    "ETLMasterPipelineID": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "ETLMasterPipelineName": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    }
                },
                "folder": {
                    "name": "Fact Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]",
                "[concat(variables('factoryId'), '/pipelines/ActivityPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/WayneMasterPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "Email Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ExecMasterPipelineDIm",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline @{pipeline().Pipeline}  Success at @{utcnow()}\", \"Subject\": \"Pipeline Success - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ExecMasterPipelineExtract",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "MasterPipelineExtract",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecMasterPipelineWork",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecMasterPipelineExtract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "MasterPipelineWork",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecMasterPipelineDIm",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecMasterPipelineWork",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "MasterPipelineDim",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Master Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineExtract')]",
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineWork')]",
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineDim')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MasterPipelineAll')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "activities": [
                    {
                        "name": "ExecExtractTimesheetPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractTimesheetPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Email Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ExecExtractThirdEyePipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecExtractDailyTaskPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecExtractWeatherPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecExtractOSHAPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecWorkLocationPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecWorkUserListPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimAssetPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimCustomerPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimDatePipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimDelayPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimEmployeePipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimJobPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimWorkOrderPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ExecDimYardPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://prod-24.eastus2.logic.azure.com:443/workflows/7ead4e10ab1f4c1499066ac2456ebd50/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nsBsgONfNOEM0auRu5OdLjdmNj9TfvwF2bYNUK-pp0I",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "body": {
                                "value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"message\": \"Pipeline @{pipeline().Pipeline}  Success at @{utcnow()}\", \"Subject\": \"Pipeline Success - @{pipeline().Pipeline}\",\n   \"receiver\": \"@{pipeline().parameters.NotificationList}\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ExecExtractThirdEyePipeline",
                        "description": "This runs from midnight to midnight on the day prior to ETLWindowsStart.\nETLWindowStartDay -1 day (the Day Prior) 00:00:00 to ETLWindowStartDay 00:00:00 ",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractThirdEyePipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@{formatDateTime(adddays(pipeline().parameters.ETLWindowStart,-1),'yyyy-MM-dd')}",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@{formatDateTime(pipeline().parameters.ETLWindowStart,'yyyy-MM-dd')}",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractDailyTaskPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractDailyTaskPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractDelayPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractDelayPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractJobPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractJobPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractOSHAPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractOSHAPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractWeatherPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractWeatherPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecExtractYardPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ExtractYardPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecWorkUserListPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "WorkUserListPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecWorkLocationPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "WorkLocationPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimAssetPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecExtractTimesheetPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimAssetPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimCustomerPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecExtractJobPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimCustomerPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimDatePipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimDatePipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimDelayPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecExtractDelayPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimDelayPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimEmployeePipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecExtractTimesheetPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimEmployeePipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimJobPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecExtractJobPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimJobPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimWorkOrderPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecExtractTimesheetPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimWorkOrderPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ExecDimYardPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ExecExtractYardPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DimYardPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ETLWindowStart": {
                                    "value": "@pipeline().parameters.ETLWindowStart",
                                    "type": "Expression"
                                },
                                "ETLWindowEnd": {
                                    "value": "@pipeline().parameters.ETLWindowEnd",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "ETLMasterPipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "NotificationList": {
                                    "value": "@pipeline().parameters.NotificationList",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "NotificationList": {
                        "type": "String",
                        "defaultValue": "wayne.snyder@mariner-usa.com"
                    },
                    "ETLWindowStart": {
                        "type": "String"
                    },
                    "ETLWindowEnd": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Master Pipelines"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ExtractTimesheetPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractThirdEyePipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractDailyTaskPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractDelayPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractJobPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractOSHAPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractWeatherPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractYardPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/WorkUserListPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/WorkLocationPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimAssetPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimCustomerPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimDatePipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimDelayPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimEmployeePipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimJobPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimWorkOrderPipeline')]",
                "[concat(variables('factoryId'), '/pipelines/DimYardPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDWETLPipelineInstance')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "piketeamasdw",
                    "type": "LinkedServiceReference"
                },
                "type": "AzureSqlDWTable",
                "structure": [
                    {
                        "name": "ETLPipelineID",
                        "type": "String"
                    },
                    {
                        "name": "ETLWindowStart",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLWindowEnd",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLPipelineStart",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLPipelineEnd",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLStatus",
                        "type": "String"
                    },
                    {
                        "name": "ETLPipelineName",
                        "type": "String"
                    },
                    {
                        "name": "ETLWindowEndLocal",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLPipelineEndLocal",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLWindowEndDateLocal",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLPipelineEndDateLocal",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLPipelineEndDate",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLWindowEndDate",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLPipelineStartDate",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLPipelineStartDateLocal",
                        "type": "DateTime"
                    },
                    {
                        "name": "ETLPipelineStartLocal",
                        "type": "DateTime"
                    }
                ],
                "typeProperties": {
                    "tableName": "[concat('[', 'ETL].[PipelineInstance]')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/FTPTest')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "linkedService1",
                    "type": "LinkedServiceReference"
                },
                "type": "FileShare",
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "rowDelimiter": "",
                        "nullValue": "\\N",
                        "treatEmptyAsNull": true,
                        "firstRowAsHeader": false
                    },
                    "folderPath": "[parameters('FTPTest_properties_typeProperties_folderPath')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureBlob1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "type": "AzureBlob",
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['currentlocations']['asset']",
                        "jsonPathDefinition": {
                            "CreateDate": "$.['CreateDate']",
                            "currentlocations.asset": "$.['currentlocations']['asset']",
                            "@tagid": "[concat('[', '''@tagid'']')]",
                            "@fleet": "[concat('[', '''@fleet'']')]",
                            "@id": "[concat('[', '''@id'']')]",
                            "@type": "[concat('[', '''@type'']')]",
                            "long": "[concat('[', '''long'']')]",
                            "lat": "[concat('[', '''lat'']')]",
                            "heading": "[concat('[', '''heading'']')]",
                            "time": "[concat('[', '''time'']')]",
                            "@unit": "[concat('[', '''speed''][''@unit'']')]",
                            "#text": "[concat('[', '''speed''][''#text'']')]",
                            "power": "[concat('[', '''power'']')]"
                        }
                    },
                    "fileName": "[parameters('AzureBlob1_properties_typeProperties_fileName')]",
                    "folderPath": "[parameters('AzureBlob1_properties_typeProperties_folderPath')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPTOJsonBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "CreateDate",
                        "type": "String"
                    },
                    {
                        "name": "?xml.@version",
                        "type": "String"
                    },
                    {
                        "name": "get_pto_hours.@ver",
                        "type": "String"
                    },
                    {
                        "name": "result_count",
                        "type": "String"
                    },
                    {
                        "name": "assetid",
                        "type": "String"
                    },
                    {
                        "name": "fleet",
                        "type": "String"
                    },
                    {
                        "name": "qty_idles",
                        "type": "String"
                    },
                    {
                        "name": "set_total_idle_time",
                        "type": "String"
                    },
                    {
                        "name": "set_pto_dur",
                        "type": "String"
                    },
                    {
                        "name": "set_pto_diff",
                        "type": "String"
                    },
                    {
                        "name": "viol_count",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['pathevent']['asset']['event']",
                        "jsonPathDefinition": {
                            "CreateDate": "$.['@CreateDate']",
                            "?xml.@version": "$.['?xml']['@version']",
                            "ResultCount": "$.['get_pto_hours']['@resultcount']",
                            "assetid": "$.['get_pto_hours']['pto_hours']['@assetid']",
                            "fleet": "$.['get_pto_hours']['pto_hours']['@fleet']",
                            "qty_idles": "$.['get_pto_hours']['pto_hours']['@qty_idles']",
                            "set_total_idle_time": "$.['get_pto_hours']['pto_hours']['@set_total_idle_time']",
                            "set_pto_dur": "$.['get_pto_hours']['pto_hours']['@set_pto_dur']",
                            "set_pto_diff": "$.['get_pto_hours']['pto_hours']['@set_pto_diff']",
                            "viol_count": "$.['get_pto_hours']['pto_hours']['@viol_count']"
                        }
                    },
                    "fileName": {
                        "value": "[parameters('ZonarPTOJsonBlob_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('ZonarPTOJsonBlob_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AssetIteratorDataSet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "piketeamasdw",
                    "type": "LinkedServiceReference"
                },
                "type": "AzureSqlDWTable",
                "typeProperties": {
                    "tableName": "dummyname"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/piketeamasdw')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzurePTODataLakeStoreFile')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "PikeTeamADLS",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureDataLakeStoreFile",
                "structure": [
                    {
                        "name": "assetid",
                        "type": "String"
                    },
                    {
                        "name": "fleet",
                        "type": "String"
                    },
                    {
                        "name": "qrt_idles",
                        "type": "String"
                    },
                    {
                        "name": "set_total_idle_time",
                        "type": "String"
                    },
                    {
                        "name": "set_pto_dur",
                        "type": "String"
                    },
                    {
                        "name": "set_pto_diff",
                        "type": "String"
                    },
                    {
                        "name": "viol_count",
                        "type": "String"
                    },
                    {
                        "name": "CreateDate",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": "|",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": false
                    },
                    "fileName": {
                        "value": "[parameters('AzurePTODataLakeStoreFile_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('AzurePTODataLakeStoreFile_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/PikeTeamADLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathJsonBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "AssetID",
                        "type": "String"
                    },
                    {
                        "name": "EventCount",
                        "type": "String"
                    },
                    {
                        "name": "regen_status",
                        "type": "String"
                    },
                    {
                        "name": "dpf_dpressure",
                        "type": "String"
                    },
                    {
                        "name": "afilter_dpressure",
                        "type": "String"
                    },
                    {
                        "name": "ffilter_dpressure",
                        "type": "String"
                    },
                    {
                        "name": "boost_pressure",
                        "type": "String"
                    },
                    {
                        "name": "average_torque",
                        "type": "String"
                    },
                    {
                        "name": "peak_rpm",
                        "type": "String"
                    },
                    {
                        "name": "outside_pressure",
                        "type": "String"
                    },
                    {
                        "name": "fuel_level",
                        "type": "String"
                    },
                    {
                        "name": "avg_load"
                    },
                    {
                        "name": "avg_rpm"
                    },
                    {
                        "name": "air_temp"
                    },
                    {
                        "name": "zone"
                    },
                    {
                        "name": "address"
                    },
                    {
                        "name": "fuel_units"
                    },
                    {
                        "name": "fuel_counter"
                    },
                    {
                        "name": "status"
                    },
                    {
                        "name": "accel"
                    },
                    {
                        "name": "loadts"
                    },
                    {
                        "name": "odometer"
                    },
                    {
                        "name": "distance_traveled"
                    },
                    {
                        "name": "reasons"
                    },
                    {
                        "name": "heading"
                    },
                    {
                        "name": "speed"
                    },
                    {
                        "name": "time"
                    },
                    {
                        "name": "long"
                    },
                    {
                        "name": "lat"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['pathevents']['asset']['event']",
                        "jsonPathDefinition": {
                            "AssetID": "$..['@id']",
                            "EventCount": "$..['@eventcount']",
                            "regen_status": "[concat('[', '''@regen_status'']')]",
                            "dpf_dpressure": "[concat('[', '''@dpf_dpressure'']')]",
                            "afilter_dpressure": "[concat('[', '''@afilter_dpressure'']')]",
                            "ffilter_dpressure": "[concat('[', '''@ffilter_dpressure'']')]",
                            "boost_pressure": "[concat('[', '''@boost_pressure'']')]",
                            "average_torque": "[concat('[', '''@average_torque'']')]",
                            "peak_rpm": "[concat('[', '''@peak_rpm'']')]",
                            "outside_pressure": "[concat('[', '''@outside_pressure'']')]",
                            "fuel_level": "[concat('[', '''@fuel_level'']')]",
                            "avg_load": "[concat('[', '''@avg_load'']')]",
                            "avg_rpm": "[concat('[', '''@avg_rpm'']')]",
                            "air_temp": "[concat('[', '''@air_temp'']')]",
                            "zone": "[concat('[', '''@zone'']')]",
                            "address": "[concat('[', '''@address'']')]",
                            "fuel_units": "[concat('[', '''@fuel_units'']')]",
                            "fuel_counter": "[concat('[', '''@ffuel_counter'']')]",
                            "status": "[concat('[', '''@status'']')]",
                            "accel": "[concat('[', '''@accel'']')]",
                            "loadts": "[concat('[', '''@loadts'']')]",
                            "odometer": "[concat('[', '''@odometer'']')]",
                            "distance_traveled": "[concat('[', '''@distance_traveled'']')]",
                            "reasons": "$.['pathevents']['asset']['event']['@reasons']",
                            "heading": "$.['pathevents']['asset']['event']['@heading']",
                            "speed": "$.['pathevents']['asset']['event']['@speed']",
                            "time": "$.['pathevents']['asset']['event']['@time']",
                            "long": "$.['pathevents']['asset']['event']['@long']",
                            "lat": "$.['pathevents']['asset']['event']['@lat']"
                        }
                    },
                    "fileName": {
                        "value": "[parameters('ZonarPathJsonBlob_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('ZonarPathJsonBlob_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathADLFile')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "PikeTeamADLS",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureDataLakeStoreFile",
                "structure": [
                    {
                        "name": "AssetID",
                        "type": "String"
                    },
                    {
                        "name": "EventCount",
                        "type": "String"
                    },
                    {
                        "name": "regen_status",
                        "type": "String"
                    },
                    {
                        "name": "dpf_dpressure",
                        "type": "String"
                    },
                    {
                        "name": "afilter_dpressure",
                        "type": "String"
                    },
                    {
                        "name": "ffilter_dpressure",
                        "type": "String"
                    },
                    {
                        "name": "boost_pressure",
                        "type": "String"
                    },
                    {
                        "name": "average_torque",
                        "type": "String"
                    },
                    {
                        "name": "peak_rpm",
                        "type": "String"
                    },
                    {
                        "name": "outside_pressure",
                        "type": "String"
                    },
                    {
                        "name": "fuel_level",
                        "type": "String"
                    },
                    {
                        "name": "avg_load",
                        "type": "String"
                    },
                    {
                        "name": "avg_rpm",
                        "type": "String"
                    },
                    {
                        "name": "air_temp",
                        "type": "String"
                    },
                    {
                        "name": "zone",
                        "type": "String"
                    },
                    {
                        "name": "address",
                        "type": "String"
                    },
                    {
                        "name": "fuel_units",
                        "type": "String"
                    },
                    {
                        "name": "fuel_counter",
                        "type": "String"
                    },
                    {
                        "name": "status",
                        "type": "String"
                    },
                    {
                        "name": "accel",
                        "type": "String"
                    },
                    {
                        "name": "loadts",
                        "type": "String"
                    },
                    {
                        "name": "odometer",
                        "type": "String"
                    },
                    {
                        "name": "distance_traveled",
                        "type": "String"
                    },
                    {
                        "name": "reasons",
                        "type": "String"
                    },
                    {
                        "name": "heading",
                        "type": "String"
                    },
                    {
                        "name": "speed",
                        "type": "String"
                    },
                    {
                        "name": "time",
                        "type": "String"
                    },
                    {
                        "name": "long",
                        "type": "String"
                    },
                    {
                        "name": "lat",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": "|",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": false
                    },
                    "fileName": {
                        "value": "[parameters('ZonarPathADLFile_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('ZonarPathADLFile_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/PikeTeamADLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathJsonBlob2bakup')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "AssetID",
                        "type": "String"
                    },
                    {
                        "name": "EventCount",
                        "type": "String"
                    },
                    {
                        "name": "regen_status",
                        "type": "String"
                    },
                    {
                        "name": "dpf_dpressure",
                        "type": "String"
                    },
                    {
                        "name": "afilter_dpressure",
                        "type": "String"
                    },
                    {
                        "name": "ffilter_dpressure",
                        "type": "String"
                    },
                    {
                        "name": "boost_pressure",
                        "type": "String"
                    },
                    {
                        "name": "average_torque",
                        "type": "String"
                    },
                    {
                        "name": "peak_rpm",
                        "type": "String"
                    },
                    {
                        "name": "outside_pressure",
                        "type": "String"
                    },
                    {
                        "name": "fuel_level",
                        "type": "String"
                    },
                    {
                        "name": "avg_load"
                    },
                    {
                        "name": "avg_rpm"
                    },
                    {
                        "name": "air_temp"
                    },
                    {
                        "name": "zone"
                    },
                    {
                        "name": "address"
                    },
                    {
                        "name": "fuel_units"
                    },
                    {
                        "name": "fuel_counter"
                    },
                    {
                        "name": "status"
                    },
                    {
                        "name": "accel"
                    },
                    {
                        "name": "loadts"
                    },
                    {
                        "name": "odometer"
                    },
                    {
                        "name": "distance_traveled"
                    },
                    {
                        "name": "reasons"
                    },
                    {
                        "name": "heading"
                    },
                    {
                        "name": "speed"
                    },
                    {
                        "name": "time"
                    },
                    {
                        "name": "long"
                    },
                    {
                        "name": "lat"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['pathevents']['asset']['event']",
                        "jsonPathDefinition": {
                            "AssetID": "$.['pathevents']['asset']['@id']",
                            "EventCount": "$.['pathevents']['asset']['@eventcount']",
                            "regen_status": "$.['pathevents']['asset']['event']['@regen_status']",
                            "dpf_dpressure": "$.['pathevents']['asset']['event']['@dpf_dpressure']",
                            "afilter_dpressure": "$.['pathevents']['asset']['event']['@afilter_dpressure']",
                            "ffilter_dpressure": "$.['pathevents']['asset']['event']['@ffilter_dpressure']",
                            "boost_pressure": "$.['pathevents']['asset']['event']['@boost_pressure']",
                            "average_torque": "$.['pathevents']['asset']['event']['@average_torque']",
                            "peak_rpm": "$.['pathevents']['asset']['event']['@peak_rpm']",
                            "outside_pressure": "$.['pathevents']['asset']['event']['@outside_pressure']",
                            "fuel_level": "$.['pathevents']['asset']['event']['@fuel_level']",
                            "avg_load": "$.['pathevents']['asset']['event']['@avg_load']",
                            "avg_rpm": "$.['pathevents']['asset']['event']['@avg_rpm']",
                            "air_temp": "$.['pathevents']['asset']['event']['@air_temp']",
                            "zone": "$.['pathevents']['asset']['event']['@zone']",
                            "address": "$.['pathevents']['asset']['event']['@address']",
                            "fuel_units": "$.['pathevents']['asset']['event']['@fuel_units']",
                            "fuel_counter": "$.['pathevents']['asset']['event']['@fuel_counter']",
                            "status": "$.['pathevents']['asset']['event']['@status']",
                            "accel": "$.['pathevents']['asset']['event']['@accel']",
                            "loadts": "$.['pathevents']['asset']['event']['l@oadts']",
                            "odometer": "$.['pathevents']['asset']['event']['@odometer']",
                            "distance_traveled": "$.['pathevents']['asset']['event']['@distance_traveled']",
                            "reasons": "$.['pathevents']['asset']['event']['@reasons']",
                            "heading": "$.['pathevents']['asset']['event']['@heading']",
                            "speed": "$.['pathevents']['asset']['event']['@speed']",
                            "time": "$.['pathevents']['asset']['event']['@time']",
                            "long": "$.['pathevents']['asset']['event']['@long']",
                            "lat": "$.['pathevents']['asset']['event']['@lat']"
                        }
                    },
                    "fileName": {
                        "value": "[parameters('ZonarPathJsonBlob2bakup_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('ZonarPathJsonBlob2bakup_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathADLBackup3JsonBlob3')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "lat",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['pathevents']['asset']['event']",
                        "jsonPathDefinition": {
                            "lat": "$.['pathevents']['asset']['event']['lat']"
                        }
                    },
                    "fileName": "[parameters('ZonarPathADLBackup3JsonBlob3_properties_typeProperties_fileName')]",
                    "folderPath": {
                        "value": "[parameters('ZonarPathADLBackup3JsonBlob3_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathJsonBlob2V38backup')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "AssetID",
                        "type": "String"
                    },
                    {
                        "name": "EventCount",
                        "type": "String"
                    },
                    {
                        "name": "address",
                        "type": "String"
                    },
                    {
                        "name": "fuel_units",
                        "type": "String"
                    },
                    {
                        "name": "fuel_counter",
                        "type": "String"
                    },
                    {
                        "name": "status",
                        "type": "String"
                    },
                    {
                        "name": "accel",
                        "type": "String"
                    },
                    {
                        "name": "loadts",
                        "type": "String"
                    },
                    {
                        "name": "odometer",
                        "type": "String"
                    },
                    {
                        "name": "distance_traveled",
                        "type": "String"
                    },
                    {
                        "name": "reasons",
                        "type": "String"
                    },
                    {
                        "name": "heading",
                        "type": "String"
                    },
                    {
                        "name": "speed",
                        "type": "String"
                    },
                    {
                        "name": "time",
                        "type": "String"
                    },
                    {
                        "name": "long",
                        "type": "String"
                    },
                    {
                        "name": "lat",
                        "type": "String"
                    },
                    {
                        "name": "source",
                        "type": "String"
                    },
                    {
                        "name": "ver",
                        "type": "String"
                    },
                    {
                        "name": "assetcount",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['pathevents']['asset']['event']",
                        "jsonPathDefinition": {
                            "AssetID": "$.['pathevents']['asset']['@id']",
                            "EventCount": "$.['pathevents']['asset']['@eventcount']",
                            "fuel_units": "$.['pathevents']['asset']['event']['@fuel_units']",
                            "fuel_counter": "$.['pathevents']['asset']['event']['fuel_counter']",
                            "status": "$.['pathevents']['asset']['event']['status']",
                            "accel": "$.['pathevents']['asset']['event']['accel']",
                            "loadts": "$.['pathevents']['asset']['event']['loadts']",
                            "odometer": "$.['pathevents']['asset']['event']['odometer']",
                            "distance_traveled": "$.['pathevents']['asset']['event']['distance_traveled']",
                            "reasons": "$.['pathevents']['asset']['event']['reasons']",
                            "heading": "$.['pathevents']['asset']['event']['heading']",
                            "speed": "$.['pathevents']['asset']['event']['speed']",
                            "time": "$.['pathevents']['asset']['event']['time']",
                            "long": "$.['pathevents']['asset']['event']['long']",
                            "lat": "$.['pathevents']['asset']['event']['lat']",
                            "address": "$.['pathevents']['asset']['event']['address']",
                            "source": "$.['pathevents']['asset']['event']['source']",
                            "ver": "$.['pathevents']['ver']",
                            "assetcount": "$.['pathevents'[]'assetcount']"
                        }
                    },
                    "fileName": {
                        "value": "[parameters('ZonarPathJsonBlob2V38backup_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('ZonarPathJsonBlob2V38backup_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TestAzureDataLakeStoreFile1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "PikeTeamADLS",
                    "type": "LinkedServiceReference"
                },
                "type": "AzureDataLakeStoreFile",
                "structure": [
                    {
                        "name": "a",
                        "type": "String"
                    },
                    {
                        "name": "b",
                        "type": "String"
                    },
                    {
                        "name": "c",
                        "type": "String"
                    },
                    {
                        "name": "d",
                        "type": "String"
                    },
                    {
                        "name": "e",
                        "type": "String"
                    },
                    {
                        "name": "f",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": "|",
                        "rowDelimiter": "",
                        "nullValue": "\\N",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": false
                    },
                    "fileName": "[parameters('TestAzureDataLakeStoreFile1_properties_typeProperties_fileName')]",
                    "folderPath": "[parameters('TestAzureDataLakeStoreFile1_properties_typeProperties_folderPath')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/PikeTeamADLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TestAzureBlob2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "CreateDate",
                        "type": "String"
                    },
                    {
                        "name": "?xml.@version",
                        "type": "String"
                    },
                    {
                        "name": "pathevents.@ver",
                        "type": "String"
                    },
                    {
                        "name": "pathevents.@assetcount",
                        "type": "String"
                    },
                    {
                        "name": "eventcount",
                        "type": "String"
                    },
                    {
                        "name": "lat",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['pathevents']['asset']['event']",
                        "jsonPathDefinition": {
                            "CreateDate": "$.['CreateDate']",
                            "?xml.@version": "$.['?xml']['@version']",
                            "pathevents.@ver": "$.['pathevents']['@ver']",
                            "pathevents.@assetcount": "$.['pathevents']['@assetcount']",
                            "lat": "[concat('[', '''@lat'']')]",
                            "assetid": "$.['pathevents']['asset']['@id']"
                        }
                    },
                    "fileName": "[parameters('TestAzureBlob2_properties_typeProperties_fileName')]",
                    "folderPath": "[parameters('TestAzureBlob2_properties_typeProperties_folderPath')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarCurrentLocationJsonBlob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "tagid",
                        "type": "String"
                    },
                    {
                        "name": "fleet",
                        "type": "String"
                    },
                    {
                        "name": "id",
                        "type": "String"
                    },
                    {
                        "name": "type",
                        "type": "String"
                    },
                    {
                        "name": "long",
                        "type": "String"
                    },
                    {
                        "name": "lat",
                        "type": "String"
                    },
                    {
                        "name": "heading",
                        "type": "String"
                    },
                    {
                        "name": "time",
                        "type": "String"
                    },
                    {
                        "name": "units",
                        "type": "String"
                    },
                    {
                        "name": "speed",
                        "type": "String"
                    },
                    {
                        "name": "power",
                        "type": "String"
                    },
                    {
                        "name": "CreateDate",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['currentlocations']['asset']",
                        "jsonPathDefinition": {
                            "tagid": "[concat('[', '''@tagid'']')]",
                            "fleet": "[concat('[', '''@fleet'']')]",
                            "id": "[concat('[', '''@id'']')]",
                            "type": "[concat('[', '''@type'']')]",
                            "long": "[concat('[', '''long'']')]",
                            "lat": "[concat('[', '''lat'']')]",
                            "heading": "[concat('[', '''heading'']')]",
                            "time": "[concat('[', '''time'']')]",
                            "units": "[concat('[', '''speed''][''@unit'']')]",
                            "speed": "[concat('[', '''speed''][''#text'']')]",
                            "power": "[concat('[', '''power'']')]",
                            "CreateDate": "$.['CreateDate']"
                        }
                    },
                    "fileName": {
                        "value": "[parameters('ZonarCurrentLocationJsonBlob_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('ZonarCurrentLocationJsonBlob_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarCurrentLocationADLFile')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "PikeTeamADLS",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureDataLakeStoreFile",
                "structure": [
                    {
                        "name": "tagid",
                        "type": "String"
                    },
                    {
                        "name": "fleet",
                        "type": "String"
                    },
                    {
                        "name": "id",
                        "type": "String"
                    },
                    {
                        "name": "type",
                        "type": "String"
                    },
                    {
                        "name": "long",
                        "type": "String"
                    },
                    {
                        "name": "lat",
                        "type": "String"
                    },
                    {
                        "name": "heading",
                        "type": "String"
                    },
                    {
                        "name": "time",
                        "type": "String"
                    },
                    {
                        "name": "units",
                        "type": "String"
                    },
                    {
                        "name": "speed",
                        "type": "String"
                    },
                    {
                        "name": "power",
                        "type": "String"
                    },
                    {
                        "name": "CreateDate",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": "|",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": false
                    },
                    "fileName": {
                        "value": "[parameters('ZonarCurrentLocationADLFile_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('ZonarCurrentLocationADLFile_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/PikeTeamADLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TestAzureBlob3')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "CreateDate",
                        "type": "String"
                    },
                    {
                        "name": "pathevents.@ver",
                        "type": "String"
                    },
                    {
                        "name": "pathevents.@assetcount",
                        "type": "String"
                    },
                    {
                        "name": "assetid",
                        "type": "String"
                    },
                    {
                        "name": "lat",
                        "type": "String"
                    },
                    {
                        "name": "eventcount",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['pathevents']['asset']",
                        "jsonPathDefinition": {
                            "CreateDate": "$.['CreateDate']",
                            "pathevents.@ver": "$.['pathevents']['@ver']",
                            "pathevents.@assetcount": "$.['pathevents']['@assetcount']",
                            "assetid": "[concat('[', '''@id'']')]",
                            "lat": "[concat('[', '''event''][''@lat'']')]",
                            "eventcount": "[concat('[', '''@eventcount'']')]"
                        }
                    },
                    "fileName": "[parameters('TestAzureBlob3_properties_typeProperties_fileName')]",
                    "folderPath": "[parameters('TestAzureBlob3_properties_typeProperties_folderPath')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarMileageADLFile')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "PikeTeamADLS",
                    "type": "LinkedServiceReference"
                },
                "type": "AzureDataLakeStoreFile",
                "structure": [
                    {
                        "name": "CreateDate",
                        "type": "String"
                    },
                    {
                        "name": "?xml.@version",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@ver",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@count",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@total",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@start",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@end",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@unit",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.assetdist",
                        "type": "String"
                    },
                    {
                        "name": "@tag",
                        "type": "String"
                    },
                    {
                        "name": "@fleet",
                        "type": "String"
                    },
                    {
                        "name": "@type",
                        "type": "String"
                    },
                    {
                        "name": "@id",
                        "type": "String"
                    },
                    {
                        "name": "from",
                        "type": "String"
                    },
                    {
                        "name": "to",
                        "type": "String"
                    },
                    {
                        "name": "name",
                        "type": "String"
                    },
                    {
                        "name": "distance",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": "|",
                        "rowDelimiter": "",
                        "nullValue": "\\N",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": false
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/PikeTeamADLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarMileageJsonBLob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "CreateDate",
                        "type": "String"
                    },
                    {
                        "name": "?xml.@version",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@ver",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@count",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@total",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@start",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@end",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.@unit",
                        "type": "String"
                    },
                    {
                        "name": "gpsmileagelist.assetdist",
                        "type": "String"
                    },
                    {
                        "name": "@tag",
                        "type": "String"
                    },
                    {
                        "name": "@fleet",
                        "type": "String"
                    },
                    {
                        "name": "@type",
                        "type": "String"
                    },
                    {
                        "name": "@id",
                        "type": "String"
                    },
                    {
                        "name": "from",
                        "type": "String"
                    },
                    {
                        "name": "to",
                        "type": "String"
                    },
                    {
                        "name": "name",
                        "type": "String"
                    },
                  {
                    "name": "distance",
                    "type": "String"
                  }
                ],
                "typeProperties": {
                    "format": {
                        "type": "JsonFormat",
                        "filePattern": "setOfObjects",
                        "jsonNodeReference": "$.['gpsmileagelist']['assetdist']",
                        "jsonPathDefinition": {
                            "CreateDate": "$.['CreateDate']",
                            "?xml.@version": "$.['?xml']['@version']",
                            "gpsmileagelist.@ver": "$.['gpsmileagelist']['@ver']",
                            "gpsmileagelist.@count": "$.['gpsmileagelist']['@count']",
                            "gpsmileagelist.@total": "$.['gpsmileagelist']['@total']",
                            "gpsmileagelist.@start": "$.['gpsmileagelist']['@start']",
                            "gpsmileagelist.@end": "$.['gpsmileagelist']['@end']",
                            "gpsmileagelist.@unit": "$.['gpsmileagelist']['@unit']",
                            "gpsmileagelist.assetdist": "$.['gpsmileagelist']['assetdist']",
                            "@tag": "[concat('[', '''@tag'']')]",
                            "@fleet": "[concat('[', '''@fleet'']')]",
                            "@type": "[concat('[', '''@type'']')]",
                            "@id": "[concat('[', '''@id'']')]",
                            "from": "[concat('[', '''loi''][''from'']')]",
                            "to": "[concat('[', '''loi''][''to'']')]",
                            "name": "[concat('[', '''loi''][''name'']')]",
                            "distance": "[concat('[', '''loi''][''distance'']')]"
                        }
                    },
                    "fileName": "[parameters('ZonarMileageJsonBLob_properties_typeProperties_fileName')]",
                    "folderPath": "[parameters('ZonarMileageJsonBLob_properties_typeProperties_folderPath')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathCSVblob')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "Asset ID",
                        "type": "String"
                    },
                    {
                        "name": "Asset No.",
                        "type": "String"
                    },
                    {
                        "name": "Date",
                        "type": "String"
                    },
                    {
                        "name": "Time(EDT)",
                        "type": "String"
                    },
                    {
                        "name": "Speed(MPH)",
                        "type": "String"
                    },
                    {
                        "name": "Heading",
                        "type": "String"
                    },
                    {
                        "name": "Log Reason",
                        "type": "String"
                    },
                    {
                        "name": "Distance Traveled(Miles)",
                        "type": "String"
                    },
                    {
                        "name": "Lat",
                        "type": "String"
                    },
                    {
                        "name": "Lon",
                        "type": "String"
                    },
                    {
                        "name": "Zone",
                        "type": "String"
                    },
                    {
                        "name": "Address",
                        "type": "String"
                    },
                    {
                        "name": "Odometer",
                        "type": "String"
                    },
                    {
                        "name": "EXSID",
                        "type": "String"
                    },
                    {
                        "name": "Acceleration(Miles/Hour/Sec)",
                        "type": "String"
                    },
                    {
                        "name": "Status Mask",
                        "type": "String"
                    },
                    {
                        "name": "Fuel Counter(Gallon)",
                        "type": "String"
                    },
                    {
                        "name": "Air Temperature",
                        "type": "String"
                    },
                    {
                        "name": "Average RPM",
                        "type": "String"
                    },
                    {
                        "name": "Average Load",
                        "type": "String"
                    },
                    {
                        "name": "Fuel Level",
                        "type": "String"
                    },
                    {
                        "name": "Outside Pressure",
                        "type": "String"
                    },
                    {
                        "name": "Peak RPM",
                        "type": "String"
                    },
                    {
                        "name": "Average Torque",
                        "type": "String"
                    },
                    {
                        "name": "Boost Pressure",
                        "type": "String"
                    },
                    {
                        "name": "FFilter Dpressure",
                        "type": "String"
                    },
                    {
                        "name": "AFilter Dpressure",
                        "type": "String"
                    },
                    {
                        "name": "DPF Dpressure",
                        "type": "String"
                    },
                    {
                        "name": "Regen Status",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "rowDelimiter": "",
                        "nullValue": "\\N",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": true
                    },
                    "fileName": {
                        "value": "[parameters('ZonarPathCSVblob_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('ZonarPathCSVblob_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureDataLakeStoreFile1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "PikeTeamADLS",
                    "type": "LinkedServiceReference"
                },
                "type": "AzureDataLakeStoreFile",
                "structure": [
                    {
                        "name": "weekendingdate",
                        "type": "String"
                    },
                    {
                        "name": "CustomerName",
                        "type": "String"
                    },
                    {
                        "name": "JobNumber",
                        "type": "String"
                    },
                    {
                        "name": "Operating_Center",
                        "type": "String"
                    },
                    {
                        "name": "Work",
                        "type": "String"
                    },
                    {
                        "name": "Zone",
                        "type": "String"
                    },
                    {
                        "name": "Yard",
                        "type": "String"
                    },
                    {
                        "name": "LineOfBusiness",
                        "type": "String"
                    },
                    {
                        "name": "AssetNumber",
                        "type": "String"
                    },
                    {
                        "name": "EntryDate",
                        "type": "String"
                    },
                    {
                        "name": "Yard_Time",
                        "type": "String"
                    },
                    {
                        "name": "Job_Site_Time",
                        "type": "String"
                    },
                    {
                        "name": "Travel_Time",
                        "type": "String"
                    },
                    {
                        "name": "Fuel_Time",
                        "type": "String"
                    },
                    {
                        "name": "Total Telematic",
                        "type": "String"
                    },
                    {
                        "name": "PikeMobile_Time",
                        "type": "String"
                    },
                    {
                        "name": "Distance_Travelled",
                        "type": "String"
                    },
                    {
                        "name": "Efficiency",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "rowDelimiter": "",
                        "nullValue": "\\N",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": true
                    },
                    "fileName": "[parameters('AzureDataLakeStoreFile1_properties_typeProperties_fileName')]",
                    "folderPath": "[parameters('AzureDataLakeStoreFile1_properties_typeProperties_folderPath')]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/PikeTeamADLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathCSVBlobV38')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ZonarJsonFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureBlob",
                "structure": [
                    {
                        "name": "Asset ID",
                        "type": "String"
                    },
                    {
                        "name": "Asset No.",
                        "type": "String"
                    },
                    {
                        "name": "Date",
                        "type": "String"
                    },
                    {
                        "name": "Time(EDT)",
                        "type": "String"
                    },
                    {
                        "name": "Speed(MPH)",
                        "type": "String"
                    },
                    {
                        "name": "Heading",
                        "type": "String"
                    },
                    {
                        "name": "Log Reason",
                        "type": "String"
                    },
                    {
                        "name": "Distance Traveled(Miles)",
                        "type": "String"
                    },
                    {
                        "name": "Lat",
                        "type": "String"
                    },
                    {
                        "name": "Lon",
                        "type": "String"
                    },
                    {
                        "name": "Zone",
                        "type": "String"
                    },
                    {
                        "name": "Address",
                        "type": "String"
                    },
                    {
                        "name": "Source",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "rowDelimiter": "\n",
                        "quoteChar": "\"",
                        "nullValue": "",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": true
                    },
                    "fileName": {
                        "value": "[parameters('ZonarPathCSVBlobV38_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('ZonarPathCSVBlobV38_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ZonarJsonFiles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarPathADLFileV38')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "PikeTeamADLS",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Container": {
                        "type": "String"
                    },
                    "FileLocation": {
                        "type": "String"
                    }
                },
                "type": "AzureDataLakeStoreFile",
                "structure": [
                    {
                        "name": "Asset ID",
                        "type": "String"
                    },
                    {
                        "name": "Asset No.",
                        "type": "String"
                    },
                    {
                        "name": "Date",
                        "type": "String"
                    },
                    {
                        "name": "Time(EDT)",
                        "type": "String"
                    },
                    {
                        "name": "Speed(MPH)",
                        "type": "String"
                    },
                    {
                        "name": "Heading",
                        "type": "String"
                    },
                    {
                        "name": "Log Reason",
                        "type": "String"
                    },
                    {
                        "name": "Distance Travelled",
                        "type": "String"
                    },
                    {
                        "name": "Lat",
                        "type": "String"
                    },
                    {
                        "name": "Lon",
                        "type": "String"
                    },
                    {
                        "name": "Zone",
                        "type": "String"
                    },
                    {
                        "name": "Address",
                        "type": "String"
                    },
                    {
                        "name": "Source",
                        "type": "String"
                    }
                ],
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": "|",
                        "nullValue": "NULL",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": false
                    },
                    "fileName": {
                        "value": "[parameters('ZonarPathADLFileV38_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('ZonarPathADLFileV38_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/PikeTeamADLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BackFillFrom5-5V3Temp')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "GenericExec",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "NotificationList": "[parameters('BackFillFrom5-5V3Temp_properties_pipeline_parameters_NotificationList')]",
                        "ETLWindowStart": "[parameters('BackFillFrom5-5V3Temp_properties_pipeline_parameters_ETLWindowStart')]",
                        "ETLWindowEnd": "[parameters('BackFillFrom5-5V3Temp_properties_pipeline_parameters_ETLWindowEnd')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2018-05-03T00:00:00Z",
                    "endTime": "2018-06-08T21:46:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/GenericExec')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Daily1pmUTCV8')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Stopped",
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2018-05-05T13:00:00Z",
                    "endTime": "2018-05-14T13:00:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Every15Minutes15V3')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "MasterPipelineZonar5Minute",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "NotificationList": "[parameters('Every15Minutes15V3_properties_pipeline_parameters_NotificationList')]",
                        "ETLWindowStart": "[parameters('Every15Minutes15V3_properties_pipeline_parameters_ETLWindowStart')]",
                        "ETLWindowEnd": "[parameters('Every15Minutes15V3_properties_pipeline_parameters_ETLWindowEnd')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 45,
                    "startTime": "2018-05-09T03:45:00Z",
                    "endTime": "2018-05-14T03:45:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineZonar5Minute')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Every15Minutes00V3')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "MasterPipelineZonar5Minute",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "NotificationList": "[parameters('Every15Minutes00V3_properties_pipeline_parameters_NotificationList')]",
                        "ETLWindowStart": "[parameters('Every15Minutes00V3_properties_pipeline_parameters_ETLWindowStart')]",
                        "ETLWindowEnd": "[parameters('Every15Minutes00V3_properties_pipeline_parameters_ETLWindowEnd')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 45,
                    "startTime": "2018-05-09T03:30:00Z",
                    "endTime": "2018-05-14T03:30:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineZonar5Minute')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Daily1300UTC')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "WayneMasterPipeline",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "NotificationList": "[parameters('Daily1300UTC_properties_pipeline_parameters_NotificationList')]",
                        "ETLWindowStart": "[parameters('Daily1300UTC_properties_pipeline_parameters_ETLWindowStart')]",
                        "ETLWindowEnd": "[parameters('Daily1300UTC_properties_pipeline_parameters_ETLWindowEnd')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2018-06-08T13:00:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 8,
                    "retryPolicy": {
                        "count": 1,
                        "intervalInSeconds": 30
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/WayneMasterPipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Every10Minutes10V2')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "MasterPipelineZonar5Minute",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "NotificationList": "[parameters('Every10Minutes10V2_properties_pipeline_parameters_NotificationList')]",
                        "ETLWindowStart": "[parameters('Every10Minutes10V2_properties_pipeline_parameters_ETLWindowStart')]",
                        "ETLWindowEnd": "[parameters('Every10Minutes10V2_properties_pipeline_parameters_ETLWindowEnd')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 30,
                    "startTime": "2018-05-07T04:50:00Z",
                    "endTime": "2018-05-21T04:50:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "count": 1,
                        "intervalInSeconds": 60
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineZonar5Minute')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Every10Mintes20V2')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "MasterPipelineZonar5Minute",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "NotificationList": "[parameters('Every10Mintes20V2_properties_pipeline_parameters_NotificationList')]",
                        "ETLWindowStart": "[parameters('Every10Mintes20V2_properties_pipeline_parameters_ETLWindowStart')]",
                        "ETLWindowEnd": "[parameters('Every10Mintes20V2_properties_pipeline_parameters_ETLWindowEnd')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 30,
                    "startTime": "2018-05-07T05:00:00Z",
                    "endTime": "2018-05-21T05:00:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "count": 1,
                        "intervalInSeconds": 60
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineZonar5Minute')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Every10Minutes00V2')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "MasterPipelineZonar5Minute",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "NotificationList": "[parameters('Every10Minutes00V2_properties_pipeline_parameters_NotificationList')]",
                        "ETLWindowStart": "[parameters('Every10Minutes00V2_properties_pipeline_parameters_ETLWindowStart')]",
                        "ETLWindowEnd": "[parameters('Every10Minutes00V2_properties_pipeline_parameters_ETLWindowEnd')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Minute",
                    "interval": 30,
                    "startTime": "2018-05-07T04:40:00Z",
                    "endTime": "2018-05-21T04:40:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 1,
                    "retryPolicy": {
                        "count": 1,
                        "intervalInSeconds": 60
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineZonar5Minute')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TEmpDail1300')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Stopped",
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2018-05-01T13:00:00Z",
                    "endTime": "2018-06-12T13:00:00.62Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 2,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Daily1300UTCTemp')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Stopped",
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2018-04-29T13:00:00Z",
                    "endTime": "2018-06-11T13:00:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 2,
                    "retryPolicy": {
                        "intervalInSeconds": 30
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Daily 1300UTCTemp')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Stopped",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "MasterPipelineDim",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "NotificationList": "[parameters('Daily 1300UTCTemp_properties_pipeline_parameters_NotificationList')]",
                        "ETLWindowStart": "[parameters('Daily 1300UTCTemp_properties_pipeline_parameters_ETLWindowStart')]",
                        "ETLWindowEnd": "[parameters('Daily 1300UTCTemp_properties_pipeline_parameters_ETLWindowEnd')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2018-04-30T13:00:00Z",
                    "endTime": "2018-06-11T13:00:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 2,
                    "retryPolicy": {
                        "count": 1,
                        "intervalInSeconds": 60
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineDim')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tempUTC1300')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "runtimeState": "Started",
                "pipeline": {
                    "pipelineReference": {
                        "referenceName": "MasterPipelineFact",
                        "type": "PipelineReference"
                    },
                    "parameters": {
                        "NotificationList": "[parameters('tempUTC1300_properties_pipeline_parameters_NotificationList')]",
                        "ETLWindowStart": "[parameters('tempUTC1300_properties_pipeline_parameters_ETLWindowStart')]",
                        "ETLWindowEnd": "[parameters('tempUTC1300_properties_pipeline_parameters_ETLWindowEnd')]"
                    }
                },
                "type": "TumblingWindowTrigger",
                "typeProperties": {
                    "frequency": "Hour",
                    "interval": 24,
                    "startTime": "2018-05-06T13:00:00Z",
                    "endTime": "2018-05-14T13:00:00Z",
                    "delay": "00:00:00",
                    "maxConcurrency": 2,
                    "retryPolicy": {
                        "count": 1,
                        "intervalInSeconds": 60
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/MasterPipelineFact')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/piketeamasdw')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "type": "AzureSqlDW",
                "typeProperties": {
                    "connectionString": {
                        "type": "SecureString",
                        "value": "[parameters('piketeamasdw_connectionString')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/linkedService1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "type": "FtpServer",
                "typeProperties": {
                    "host": "ftp.pike.com",
                    "port": 21,
                    "enableSsl": false,
                    "enableServerCertificateValidation": false,
                    "authenticationType": "Basic",
                    "userName": "[parameters('linkedService1_properties_typeProperties_userName')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('linkedService1_password')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ZonarJsonFiles')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "type": "AzureStorage",
                "typeProperties": {
                    "connectionString": {
                        "type": "SecureString",
                        "value": "[parameters('ZonarJsonFiles_connectionString')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/PikeTeamADLS')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2017-09-01-preview",
            "properties": {
                "type": "AzureDataLakeStore",
                "typeProperties": {
                    "dataLakeStoreUri": "[parameters('PikeTeamADLS_properties_typeProperties_dataLakeStoreUri')]",
                    "tenant": "[parameters('PikeTeamADLS_properties_typeProperties_tenant')]",
                    "subscriptionId": "[parameters('PikeTeamADLS_properties_typeProperties_subscriptionId')]",
                    "resourceGroupName": "[parameters('PikeTeamADLS_properties_typeProperties_resourceGroupName')]"
                }
            },
            "dependsOn": []
        }
    ]
}